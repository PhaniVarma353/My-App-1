{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.routes.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/application-details/application-aboutus/application-aboutus.component.ts","webpack:///src/app/application-details/application-aboutus/application-aboutus.component.html","webpack:///src/app/application-details/application-clients/application-clients.component.ts","webpack:///src/app/application-details/application-clients/application-clients.component.html","webpack:///src/app/application-details/application-contactus/application-contactus.component.ts","webpack:///src/app/application-details/application-contactus/application-contactus.component.html","webpack:///src/app/application-details/application-services/application-services.component.ts","webpack:///src/app/application-details/application-services/application-services.component.html","webpack:///src/app/common/footer/footer.component.ts","webpack:///src/app/common/footer/footer.component.html","webpack:///src/app/common/header/header.component.ts","webpack:///src/app/common/header/header.component.html","webpack:///src/app/common/headerone/headerone.component.ts","webpack:///src/app/common/headerone/headerone.component.html","webpack:///src/app/common/headertwo/headertwo.component.ts","webpack:///src/app/common/headertwo/headertwo.component.html","webpack:///src/app/common/imgcaurousel/imgcaurousel.component.ts","webpack:///src/app/common/imgcaurousel/imgcaurousel.component.html","webpack:///src/app/header-two-details/activities/activities.component.ts","webpack:///src/app/header-two-details/activities/activities.component.html","webpack:///src/app/header-two-details/events/events.component.ts","webpack:///src/app/header-two-details/events/events.component.html","webpack:///src/app/header-two-details/movies/movies.component.ts","webpack:///src/app/header-two-details/movies/movies.component.html","webpack:///src/app/header-two-details/plays/plays.component.ts","webpack:///src/app/header-two-details/plays/plays.component.html","webpack:///src/app/header-two-details/sports/sports.component.ts","webpack:///src/app/header-two-details/sports/sports.component.html","webpack:///src/app/helpers/must-match-password.ts","webpack:///src/app/helpers/username-validation.ts","webpack:///src/app/homelayout/homelayout.component.ts","webpack:///src/app/homelayout/homelayout.component.html","webpack:///src/app/myaccount/account-details/faq/faq.component.ts","webpack:///src/app/myaccount/account-details/faq/faq.component.html","webpack:///src/app/myaccount/account-details/helpandsupport/helpandsupport.component.ts","webpack:///src/app/myaccount/account-details/helpandsupport/helpandsupport.component.html","webpack:///src/app/myaccount/account-details/settings/settings.component.ts","webpack:///src/app/myaccount/account-details/settings/settings.component.html","webpack:///src/app/myaccount/forget-password/forget-password.component.ts","webpack:///src/app/myaccount/forget-password/forget-password.component.html","webpack:///src/app/myaccount/logout/logout.component.ts","webpack:///src/app/myaccount/logout/logout.component.html","webpack:///src/app/myaccount/manage-roles/manage-roles.component.ts","webpack:///src/app/myaccount/manage-roles/manage-roles.component.html","webpack:///src/app/myaccount/managerole-admin/managerole-admin.component.ts","webpack:///src/app/myaccount/managerole-admin/managerole-admin.component.html","webpack:///src/app/myaccount/managerole-manager/managerole-manager.component.ts","webpack:///src/app/myaccount/managerole-manager/managerole-manager.component.html","webpack:///src/app/myaccount/managerole-superadmin/managerole-superadmin.component.ts","webpack:///src/app/myaccount/managerole-superadmin/managerole-superadmin.component.html","webpack:///src/app/myaccount/managerole-user/managerole-user.component.ts","webpack:///src/app/myaccount/managerole-user/managerole-user.component.html","webpack:///src/app/myaccount/myaccount/myaccount.component.ts","webpack:///src/app/myaccount/myaccount/myaccount.component.html","webpack:///src/app/myaccount/mylogin/mylogin.component.ts","webpack:///src/app/myaccount/mylogin/mylogin.component.html","webpack:///src/app/myaccount/projectproperties/projectproperties.component.ts","webpack:///src/app/myaccount/projectproperties/projectproperties.component.html","webpack:///src/app/mybusiness/mybusiness.component.ts","webpack:///src/app/mybusiness/mybusiness.component.html","webpack:///src/app/myhomeview/myhomeview.component.ts","webpack:///src/app/myhomeview/myhomeview.component.html","webpack:///src/app/services/address-service.ts","webpack:///src/app/services/contact-us-service.ts","webpack:///src/app/services/login-service.ts","webpack:///src/app/services/project-properties-service.ts","webpack:///src/app/services/user-service.ts","webpack:///src/app/shared/registrationform/registrationform.component.ts","webpack:///src/app/shared/registrationform/registrationform.component.html","webpack:///src/app/shared/services/loginutilityservice.ts","webpack:///src/app/shared/userroleenum.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","declarations","ProjComponents","Project353Routes","main","home","login","aboutus","contactus","services","clients","myhomeview","mybusiness","myaccount","manageroles","manageProject","manageaccount","roles_admin","roles_manager","roles_user","activities","events","movies","plays","sports","AppComponent","router","title","navigate","selector","templateUrl","styleUrls","AppModule","providers","bootstrap","ApplicationAboutusComponent","ApplicationClientsComponent","ApplicationContactusComponent","_contactusService","formBuilder","toastr","_loginUtilityService","_projectPropertiesService","showSpinner","contactusSubmitted","userId","getAllRequests","getUserLoginData$","subscribe","userLoginData","userRole","uid","createContactusForm","contactusForm","group","fullName","required","email","phoneNumber","message","getProjectProperties","data","console","log","imageUrl","propertiesMap","invalid","setTimeout","warning","timeOut","progressBar","positionClass","saveNotes","status","success","error","errors","errorMessage","controls","ApplicationServicesComponent","FooterComponent","HeaderComponent","HeaderoneComponent","_router","_activatedRoute","loginStatus","accessManageRoles","accessManageProject","sideNavOpen","accountSideNavOpen","subscriptions","userRoleName","userName","SUPERADMIN","ADMIN","MANAGER","relativeTo","tab","closeAccountNav","document","getElementById","style","width","closeNav","navigateToAboutUs","navigateToHome","navigateToContactUs","openNav","navigateToServices","navigateToClients","navigateToHelpAndSupport","navigateToSettings","signOut","HeadertwoComponent","navigateToMovies","navigateToEvents","navigateToPlays","navigateToSports","navigateToActivities","ImgcaurouselComponent","ActivitiesComponent","EventsComponent","MoviesComponent","PlaysComponent","SportsComponent","MustMatchPassword","controlName","matchingControlName","formGroup","control","matchingControl","mustMatch","value","setErrors","mustMatchPassword","UserNameValidation","msg","upperCaseCharacters","lowerCaseCharacters","numberCharacters","specialCharacters","test","userNameValidation","HomelayoutComponent","FaqComponent","HelpandsupportComponent","SettingsComponent","_userService","_loginService","cd","fb","_addressService","roleName","userDetails","userViewDetails","settingsSubmitted","selectedTab","genderRadio","maritalStatusRadio","changePasswordSubmitted","citiesList","statesList","countryList","country","selectedCountry","selectedState","undefined","selectedCity","editFile","removeUpload","registrationForm","file","userAddress","state","city","changePasswordDetails","USER","getUserById","getStatesAndCountriesList","createSettingsForm","createChangePasswordForm","getCountriesAndStatesList","statesMap","Object","forEach","key","push","name","countriesMap","citiesMap","getStatesListByCountryId","getCountries","countryId","filter","item","getCitiesListByCountryId","stateId","getCitiesListByStateId","settingsForm","enable","a","JSON","parse","stringify","disabled","minLength","gender","married","addressOne","addressTwo","landMark","changePasswordForm","oldPassword","newPassword","confirmPassword","tabIndex","saveSettings","click","changePassword","changePasswordStatus","changePasswordResponse","event","reader","FileReader","target","files","readAsDataURL","onload","result","profilePicture","patchValue","markForCheck","newFileList","Array","from","el","nativeElement","submitted","valid","alert","x","selectTab","ForgetPasswordComponent","LogoutComponent","ManageRolesComponent","roleTab","showRegistration","roleInputData","roleDefinitions","accountStatusDefinitions","columnDefs","createdByRole","getAllUsersOnRole","role","superAdminList","adminList","managerList","userList","length","createRole","ManageroleAdminComponent","ManageroleManagerComponent","ManageroleSuperadminComponent","ManageroleUserComponent","MyaccountComponent","_cdr","accountSelectedTabIndex","snapshot","params","detectChanges","MyloginComponent","formBuilderLogin","user","userSignupDetails","resetPasswordDetails","registerUserSubmitted","loginSubmitted","acceptTerms","resetPasswordSubmitted","createRegisterForm","createLoginForm","createResetPasswordForm","getUser","registerForm","password","agreeTerms","validator","loginForm","resetPasswordForm","resetUserLogin","clearData","reset","authenticateUserLogin","accountStatus","setUserLoginData","createdBy","saveUser","getUsers","resetPasswordModalPopUp","signupModalPopUp","close","ProjectpropertiesComponent","projectPropertiesSubmitted","uploadImage","selectedType","typeList","projectPropertiesRequest","createProjectPropertiesForm","projectPropertiesForm","propertyName","type","saveProperties","projectPropertiesResponse","onTypeSelected","MybusinessComponent","MyhomeviewComponent","AddressService","httpClient","get","ContactusService","projectProperties","post","headers","LoginService","changePasswordRequest","ProjectPropertiesService","UserService","RegistrationformComponent","updateUserTable","registerInputData","emit","LoginUtilityService","asObservable","next","providedIn","UserRoleType","UserRoleTypeName","environment","production","bootstrapModule","ref","window","destroy","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MyloginComponent } from './myaccount/mylogin/mylogin.component';\r\nimport { LogoutComponent } from './myaccount/logout/logout.component';\r\nimport { ForgetPasswordComponent } from './myaccount/forget-password/forget-password.component';\r\nimport { MybusinessComponent } from './mybusiness/mybusiness.component';\r\nimport { MyhomeviewComponent } from './myhomeview/myhomeview.component';\r\nimport { HomelayoutComponent } from './homelayout/homelayout.component';\r\nimport { ManageRolesComponent } from './myaccount/manage-roles/manage-roles.component';\r\nimport { ManageroleAdminComponent } from './myaccount/managerole-admin/managerole-admin.component';\r\nimport { ManageroleManagerComponent } from './myaccount/managerole-manager/managerole-manager.component';\r\nimport { ManageroleUserComponent } from './myaccount/managerole-user/managerole-user.component';\r\nimport { RegistrationformComponent } from './shared/registrationform/registrationform.component';\r\nimport { ApplicationAboutusComponent } from './application-details/application-aboutus/application-aboutus.component';\r\nimport { ApplicationContactusComponent } from './application-details/application-contactus/application-contactus.component';\r\nimport { ApplicationServicesComponent } from './application-details/application-services/application-services.component';\r\nimport { ApplicationClientsComponent } from './application-details/application-clients/application-clients.component';\r\nimport { MoviesComponent } from './header-two-details/movies/movies.component';\r\nimport { SportsComponent } from './header-two-details/sports/sports.component';\r\nimport { EventsComponent } from './header-two-details/events/events.component';\r\nimport { PlaysComponent } from './header-two-details/plays/plays.component';\r\nimport { ActivitiesComponent } from './header-two-details/activities/activities.component';\r\nimport { MyaccountComponent } from './myaccount/myaccount/myaccount.component';\r\nimport { SettingsComponent } from './myaccount/account-details/settings/settings.component';\r\nimport { FaqComponent } from './myaccount/account-details/faq/faq.component';\r\nimport { HelpandsupportComponent } from './myaccount/account-details/helpandsupport/helpandsupport.component';\r\nimport { HeaderoneComponent } from './common/headerone/headerone.component';\r\nimport { HeaderComponent } from './common/header/header.component';\r\nimport { FooterComponent } from './common/footer/footer.component';\r\nimport { ImgcaurouselComponent } from './common/imgcaurousel/imgcaurousel.component';\r\nimport { HeadertwoComponent } from './common/headertwo/headertwo.component';\r\nimport { ManageroleSuperadminComponent } from './myaccount/managerole-superadmin/managerole-superadmin.component';\r\nimport { ProjectpropertiesComponent } from './myaccount/projectproperties/projectproperties.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: HomelayoutComponent\r\n    },\r\n    {\r\n        path: 'main',\r\n        component: HomelayoutComponent\r\n    },\r\n    {\r\n        path: 'login',\r\n        component: MyloginComponent\r\n    },\r\n    {\r\n        path: 'aboutus',\r\n        component: ApplicationAboutusComponent\r\n    },\r\n    {\r\n        path: 'contactus',\r\n        component: ApplicationContactusComponent\r\n    },\r\n    {\r\n        path: 'services',\r\n        component: ApplicationServicesComponent\r\n    },\r\n    {\r\n        path: 'clients',\r\n        component: ApplicationClientsComponent\r\n    },\r\n    {\r\n        path: 'activities',\r\n        component: ActivitiesComponent\r\n    },\r\n    {\r\n        path: 'events',\r\n        component: EventsComponent\r\n    },\r\n    {\r\n        path: 'movies',\r\n        component: MoviesComponent\r\n    },\r\n    {\r\n        path: 'plays',\r\n        component: PlaysComponent\r\n    },\r\n    {\r\n        path: 'sports',\r\n        component: SportsComponent\r\n    },\r\n    {\r\n        path: 'mybusiness/:id',\r\n        component: MybusinessComponent\r\n    },\r\n    {\r\n        path: 'myhomeview/:id',\r\n        component: MyhomeviewComponent\r\n    },\r\n    {\r\n        path: 'mybusiness/:id/manageroles',\r\n        component: ManageRolesComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'admin', pathMatch: 'full' },\r\n            { path: 'superadmin', component: ManageroleSuperadminComponent },\r\n            { path: 'admin', component: ManageroleAdminComponent },\r\n            { path: 'manager', component: ManageroleManagerComponent },\r\n            { path: 'user', component: ManageroleUserComponent },\r\n        ]\r\n    },\r\n    {\r\n        path: 'mybusiness/:id/manageproject',\r\n        component: ProjectpropertiesComponent\r\n    },\r\n    {\r\n        path: 'myaccount/:id/manageaccount/:tab',\r\n        component: MyaccountComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'settings', pathMatch: 'full' },\r\n            { path: 'settings', component: SettingsComponent },\r\n            { path: 'helpandsupport', component: HelpandsupportComponent },\r\n            { path: 'faq', component:  FaqComponent},\r\n        ]\r\n    },\r\n    // {\r\n    //     path: 'myaccount/:id/manageaccount/:tab/helpandsupport',\r\n    //     component: HelpandsupportComponent\r\n    // },\r\n\r\n];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes),\r\n    ],\r\n    exports: [RouterModule],\r\n    declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n\r\nexport const ProjComponents = [\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    MyloginComponent,\r\n    LogoutComponent,\r\n    ForgetPasswordComponent,\r\n    ImgcaurouselComponent,\r\n    MybusinessComponent,\r\n    MyhomeviewComponent,\r\n    HeaderoneComponent,\r\n    HeadertwoComponent,\r\n    HomelayoutComponent,\r\n    ManageRolesComponent,\r\n    ManageroleAdminComponent,\r\n    ManageroleManagerComponent,\r\n    ManageroleUserComponent,\r\n    RegistrationformComponent, \r\n    ApplicationAboutusComponent,\r\n    ApplicationContactusComponent, \r\n    ApplicationServicesComponent, \r\n    ApplicationClientsComponent,\r\n    MoviesComponent,\r\n    SportsComponent,\r\n    EventsComponent,\r\n    PlaysComponent,\r\n    ActivitiesComponent,\r\n    SettingsComponent, \r\n    HelpandsupportComponent, \r\n    FaqComponent,\r\n    MyaccountComponent,\r\n    ManageroleSuperadminComponent,\r\n    ProjectpropertiesComponent,\r\n];\r\n\r\n","export const Project353Routes = {\r\n    main: 'main',\r\n    home: 'home',\r\n    login: 'login',\r\n    aboutus: 'aboutus',\r\n    contactus: 'contactus',\r\n    services: 'services',\r\n    clients: 'clients',\r\n    myhomeview: 'myhomeview',\r\n    mybusiness: 'mybusiness',\r\n    myaccount: 'myaccount',\r\n    manageroles: 'manageroles',\r\n    manageProject: 'manageproject',\r\n    manageaccount: 'manageaccount',\r\n    roles_admin: 'admin',\r\n    roles_manager: 'manager',\r\n    roles_user: 'user',\r\n    activities: 'activities',\r\n    events: 'events',\r\n    movies: 'movies',\r\n    plays: 'plays',\r\n    sports: 'sports' \r\n};","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'project353';\r\n\r\n  @HostListener('window:beforeunload') goToPage() {\r\n    this.router.navigate(['/']);\r\n  }\r\n  \r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n}\r\n","<!-- <app-header></app-header> -->\r\n<app-headerone></app-headerone>\r\n<app-headertwo></app-headertwo>\r\n<div class=\"main-content\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule, ProjComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UserService } from './services/user-service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LoginService } from './services/login-service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProjectPropertiesService } from './services/project-properties-service';\r\nimport { ContactusService } from './services/contact-us-service';\r\nimport { AddressService } from './services/address-service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent, ProjComponents,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot(),\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [UserService, LoginService, ProjectPropertiesService, ContactusService, AddressService],\r\n  bootstrap: [AppComponent],\r\n  exports: [ProjComponents]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-application-aboutus',\r\n  templateUrl: './application-aboutus.component.html',\r\n  styleUrls: ['./application-aboutus.component.css']\r\n})\r\nexport class ApplicationAboutusComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>application-aboutus works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-application-clients',\r\n  templateUrl: './application-clients.component.html',\r\n  styleUrls: ['./application-clients.component.css']\r\n})\r\nexport class ApplicationClientsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>application-clients works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProjectPropertiesService } from 'src/app/services/project-properties-service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ContactusRequest } from 'src/app/interfaces/ContactusDetails';\r\nimport { ContactusService } from 'src/app/services/contact-us-service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LoginUtilityService } from 'src/app/shared/services/loginutilityservice';\r\n\r\n@Component({\r\n  selector: 'app-application-contactus',\r\n  templateUrl: './application-contactus.component.html',\r\n  styleUrls: ['./application-contactus.component.css']\r\n})\r\nexport class ApplicationContactusComponent implements OnInit {\r\n  showSpinner = false;\r\n  \r\n  contactusForm: FormGroup;\r\n\r\n  contactus: ContactusRequest;\r\n\r\n  contactusSubmitted = false;\r\n  userId: number = 0;\r\n  imageUrl: any;\r\n\r\n  constructor(\r\n    private _contactusService: ContactusService,\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private _loginUtilityService: LoginUtilityService,\r\n    private _projectPropertiesService: ProjectPropertiesService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contactus = {};\r\n    this.getAllRequests();\r\n    this._loginUtilityService.getUserLoginData$().subscribe(userLoginData => {\r\n      if (userLoginData && userLoginData.userRole) {\r\n        this.userId = userLoginData.uid;\r\n      }\r\n    });\r\n    this.createContactusForm();\r\n  }\r\n  get contactusFormControl() { return this.contactusForm.controls; }\r\n\r\n  createContactusForm() {\r\n    this.contactusForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      phoneNumber: ['', Validators.required],\r\n      message: ['', Validators.required],\r\n    })\r\n  }\r\n\r\n  getAllRequests() {\r\n    this.showSpinner = true;\r\n    this._projectPropertiesService.getProjectProperties().subscribe(\r\n      data => {\r\n        debugger;\r\n        console.log(data);\r\n        this.imageUrl = data.propertiesMap[\"CONTACT_US_PAGE_PNG\"][0];\r\n        this.showSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  save() {\r\n    this.contactusSubmitted = true;\r\n    this.showSpinner = true;\r\n    if (this.contactusForm.invalid) {\r\n      setTimeout(() => this.toastr.warning('You must fill all the Required fields', 'Alert', { timeOut: 3000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n      this.showSpinner = false;\r\n      return;\r\n    }\r\n    debugger;\r\n    this.contactus.id = 0;\r\n    this.contactus.userId = this.userId;\r\n    this._contactusService.saveNotes(this.contactus).subscribe(\r\n      data => {\r\n        if (data !== null && data.status) {\r\n          debugger;\r\n          console.log(data);\r\n          console.log(\"Success\");\r\n          setTimeout(() => this.toastr.success('Thank you for filling out the Form', 'Contact us', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n          this.contactus = {};\r\n          this.showSpinner = false;\r\n          this.contactusSubmitted = false;\r\n        } else {\r\n          console.log('Failed');\r\n          this.showSpinner = false;\r\n          setTimeout(() => this.toastr.error('Submit Failed - ' + data.errors[0].errorMessage, 'Contact us', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n        }\r\n      }, (error: any) => {\r\n        console.log('Failed');\r\n        this.showSpinner = false;\r\n        setTimeout(() => this.toastr.error('Failed - unknown error', 'Contact us', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"\">\r\n  <div style=\"text-align:center\">\r\n    <h2>Drop a Line</h2>\r\n    <p><i class=\"fa fa-fw fa-envelope\"></i>Don't hesitate to contact us.</p>\r\n    <p>Swing by for a cup of coffee, or leave us a message</p>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-7 mt-3\">\r\n      <div>\r\n        <img src=\"{{imageUrl}}\" alt=\"Girl in a jacket\" width=\"735\" height=\"500\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-5\">\r\n      <form [formGroup]=\"contactusForm\" novalidate>\r\n        <div class=\"modal-body\">\r\n          <div class=\"row\">\r\n            <div class=\"form-group col-sm-12\">\r\n              <label for=\"name\">Full Name:</label>\r\n              <input type=\"text\" formControlName=\"fullName\" [(ngModel)]=\"contactus.fullName\" class=\"form-control\"\r\n                id=\"fullName\" placeholder=\"Full Name\" name=\"fullName\"\r\n                [ngClass]=\"{ 'is-invalid': contactusSubmitted && contactusFormControl.fullName.errors }\">\r\n              <div *ngIf=\"contactusSubmitted && contactusFormControl.fullName.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"contactusFormControl.fullName.errors.required\">Full Name is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"form-group col-sm-12\">\r\n              <label for=\"name\">Email:</label>\r\n              <input type=\"text\" formControlName=\"email\" [(ngModel)]=\"contactus.email\" class=\"form-control\" id=\"email\"\r\n                placeholder=\"Email\" name=\"email\"\r\n                [ngClass]=\"{ 'is-invalid': contactusSubmitted && contactusFormControl.email.errors }\">\r\n              <div *ngIf=\"contactusSubmitted && contactusFormControl.email.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"contactusFormControl.email.errors.required\">Email is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"form-group col-12\">\r\n              <label for=\"name\">Phone Number:</label>\r\n              <input type=\"text\" formControlName=\"phoneNumber\" [(ngModel)]=\"contactus.phoneNumber\" class=\"form-control\"\r\n                id=\"phoneNumber\" placeholder=\"Phone Number\" name=\"phoneNumber\"\r\n                [ngClass]=\"{ 'is-invalid': contactusSubmitted && contactusFormControl.phoneNumber.errors }\">\r\n              <div *ngIf=\"contactusSubmitted && contactusFormControl.phoneNumber.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"contactusFormControl.phoneNumber.errors.required\">Phone Number is required\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n          <div class=\"form-group col-sm-12\">\r\n            <label for=\"message\">Message:</label>\r\n            <textarea formControlName=\"message\" [(ngModel)]=\"contactus.message\" class=\"form-control\" id=\"message\"\r\n              placeholder=\"Message\" name=\"message\" rows=\"3\"\r\n              [ngClass]=\"{ 'is-invalid': contactusSubmitted && contactusFormControl.message.errors }\"></textarea>\r\n            <div *ngIf=\"contactusSubmitted && contactusFormControl.message.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"contactusFormControl.message.errors.required\">Message is required\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n      <div class=\"modal-footer\">\r\n        <button *ngIf=\"!showSpinner\" type=\"submit\" class=\"btn btn-primary text-center\" (click)=\"save()\">Send Message</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-application-services',\r\n  templateUrl: './application-services.component.html',\r\n  styleUrls: ['./application-services.component.css']\r\n})\r\nexport class ApplicationServicesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>application-services works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"page-footer font-small lighten-3 pt-4\" style=\"position:relative\">\r\n\r\n\r\n  <!-- <div class=\"container text-center text-md-left\">\r\n\r\n    \r\n    <div class=\"row\">\r\n\r\n     \r\n      <div class=\"col-md-4 col-lg-3 mr-auto my-md-4 my-0 mt-4 mb-1\">\r\n\r\n        <h5 class=\"font-weight-bold text-uppercase mb-4\">Footer Content</h5>\r\n        <p>Here you can use rows and columns to organize your footer content.</p>\r\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fugit amet numquam iure provident voluptate\r\n          esse\r\n          quasi, veritatis totam voluptas nostrum.</p>\r\n\r\n      </div>\r\n      \r\n\r\n      <hr class=\"clearfix w-100 d-md-none\">\r\n\r\n     \r\n      <div class=\"col-md-2 col-lg-2 mx-auto my-md-4 my-0 mt-4 mb-1\">\r\n\r\n        <h5 class=\"font-weight-bold text-uppercase mb-4\">About</h5>\r\n\r\n        <ul class=\"list-unstyled\">\r\n          <li>\r\n            <p>\r\n              <a href=\"#!\">PROJECTS</a>\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <a href=\"#!\">ABOUT US</a>\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <a href=\"#!\">BLOG</a>\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <a href=\"#!\">AWARDS</a>\r\n            </p>\r\n          </li>\r\n        </ul>\r\n\r\n      </div>\r\n      \r\n\r\n      <hr class=\"clearfix w-100 d-md-none\">\r\n\r\n      \r\n      <div class=\"col-md-4 col-lg-3 mx-auto my-md-4 my-0 mt-4 mb-1\">\r\n\r\n        \r\n        <h5 class=\"font-weight-bold text-uppercase mb-4\">Address</h5>\r\n\r\n        <ul class=\"list-unstyled\">\r\n          <li>\r\n            <p>\r\n              <i class=\"fas fa-home mr-3\"></i> New York, NY 10012, US</p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <i class=\"fas fa-envelope mr-3\"></i> info@example.com</p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <i class=\"fas fa-phone mr-3\"></i> + 01 234 567 88</p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <i class=\"fas fa-print mr-3\"></i> + 01 234 567 89</p>\r\n          </li>\r\n        </ul>\r\n\r\n      </div>\r\n      \r\n\r\n      <hr class=\"clearfix w-100 d-md-none\">\r\n\r\n      \r\n      <div class=\"col-md-2 col-lg-2 text-center mx-auto my-4\">\r\n\r\n        \r\n        <h5 class=\"font-weight-bold text-uppercase mb-4\">Follow Us</h5>\r\n\r\n        \r\n        <a type=\"button\" class=\"btn-floating btn-fb\">\r\n          <i class=\"fab fa-facebook-f\"></i>\r\n        </a>\r\n       \r\n        <a type=\"button\" class=\"btn-floating btn-tw\">\r\n          <i class=\"fab fa-twitter\"></i>\r\n        </a>\r\n        \r\n        <a type=\"button\" class=\"btn-floating btn-gplus\">\r\n          <i class=\"fab fa-google-plus-g\"></i>\r\n        </a>\r\n        \r\n        <a type=\"button\" class=\"btn-floating btn-dribbble\">\r\n          <i class=\"fab fa-dribbble\"></i>\r\n        </a>\r\n\r\n      </div>\r\n      \r\n\r\n    </div>\r\n    \r\n\r\n  </div>\r\n   -->\r\n\r\n\r\n  <div class=\"footer-copyright text-center py-3\">Copyright 2020 © Project@353. All rights Reserved\r\n  </div>\r\n\r\n\r\n</footer>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- <nav class=\"navbar navbar-expand-sm bg-info navbar-dark header-fixed-top\">\r\n  <a class=\"navbar-brand\">\r\n    <img src=\"./A5.png\" style=\"width:40px;\">\r\n  </a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Link</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Link</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Link</a>\r\n      </li>    \r\n    </ul>\r\n  </div>  \r\n</nav> -->\r\n\r\n<nav class=\"navbar navbar-expand-sm bg-info navbar-dark header-fixed-top\">\r\n  <!-- Brand -->\r\n  <a class=\"navbar-brand logo-pad-0 img-magnifier-container\" href=\"#\">\r\n    <img class=\"img-fluid\" src=\"https://picsum.photos/285/200/?image=0&random\" class=\"logo-img\" alt=\"Cinque Terre\">\r\n  </a>\r\n\r\n\r\n  <a class=\"navbar-brand justify-content-between d-none d-md-flex flex-row pos-logo\" href=\"#\">PROJECT 353</a>\r\n\r\n  <!-- Links -->\r\n  <ul class=\"navbar-nav justify-content-between d-none d-md-flex flex-row pos-right\">\r\n    <li class=\"nav-item d-none d-md-block\">\r\n      <a class=\"nav-link\" href=\"#\">Link 1</a>\r\n    </li>\r\n    <li class=\"nav-item d-none d-md-block\">\r\n      <a class=\"nav-link\" href=\"#\">Link 2</a>\r\n    </li>\r\n\r\n    <!-- Dropdown -->\r\n    <li class=\"nav-item dropdown d-none d-md-block\">\r\n      <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbardrop\" data-toggle=\"dropdown\">\r\n        Dropdown link\r\n      </a>\r\n      <div class=\"dropdown-menu\">\r\n        <a class=\"dropdown-item\" href=\"#\">Link 1</a>\r\n        <a class=\"dropdown-item\" href=\"#\">Link 2</a>\r\n        <a class=\"dropdown-item\" href=\"#\">Link 3</a>\r\n      </div>\r\n    </li>\r\n    <li class=\"nav-item dropdown d-none d-md-block\">\r\n      <i class=\"fas fa-user nav-link\" id=\"dropdownMenuButton\" aria-haspopup=\"true\" aria-expanded=\"false\"\r\n        data-toggle=\"dropdown\" style='font-size:20px' aria-hidden=\"true\"></i>\r\n      <div class=\"dropdown-menu dropdown-menu-left login-dropdown\" aria-labelledby=\"dropdownMenuButton\">\r\n        <a class=\"dropdown-item\" href=\"#\">Link 1</a>\r\n        <a class=\"dropdown-item\" href=\"#\">Link 2</a>\r\n        <a class=\"dropdown-item\" href=\"#\">Link 3</a>\r\n      </div>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"navbar-brand\" href=\"#\">Logo</a>\r\n    </li>\r\n\r\n  </ul>\r\n\r\n\r\n</nav>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Project353Routes } from 'src/app/app.component.routes';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { LoginUtilityService } from 'src/app/shared/services/loginutilityservice';\r\nimport { UserRoleType } from 'src/app/shared/userroleenum';\r\n\r\n@Component({\r\n  selector: 'app-headerone',\r\n  templateUrl: './headerone.component.html',\r\n  styleUrls: ['./headerone.component.css']\r\n})\r\nexport class HeaderoneComponent implements OnInit {\r\n  sideNavOpen: boolean;\r\n  accountSideNavOpen: boolean;\r\n  subscriptions: Subscription;\r\n  userRole: number;\r\n  userRoleName: string;\r\n  fullName: string;\r\n  loginStatus = false;\r\n  accessManageRoles = false;\r\n  accessManageProject = false;\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _loginUtilityService: LoginUtilityService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sideNavOpen = false;\r\n    this.accountSideNavOpen = false;\r\n    this.subscriptions =\r\n      this._loginUtilityService.getUserLoginData$().subscribe(userLoginData => {\r\n        if (userLoginData && userLoginData.userRole) {\r\n          this.userRole = userLoginData.userRole;\r\n          this.userRoleName = userLoginData.userName;\r\n          this.fullName = userLoginData.fullName;\r\n          this.loginStatus = true;\r\n          this.accessManageProject = false;\r\n          this.accessManageRoles = false;\r\n          if (this.userRole === UserRoleType.SUPERADMIN || this.userRole === UserRoleType.ADMIN\r\n            || this.userRole === UserRoleType.MANAGER) {\r\n            this.accessManageRoles = true;\r\n          }\r\n          if (this.userRole === UserRoleType.SUPERADMIN || this.userRole === UserRoleType.ADMIN) {\r\n            this.accessManageProject = true;\r\n          }\r\n        } else {\r\n          this.loginStatus = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  navigateToLogin() {\r\n    this._router.navigate([Project353Routes.login], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToHome() {\r\n    this._router.navigate([Project353Routes.main], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToAboutUs() {\r\n    this._router.navigate([Project353Routes.aboutus], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToContactUs() {\r\n    this._router.navigate([Project353Routes.contactus], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToServices() {\r\n    this._router.navigate([Project353Routes.services], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToClients() {\r\n    this._router.navigate([Project353Routes.clients], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToMain() {\r\n    this._router.navigate([Project353Routes.main], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToSettings(tab: number) {\r\n    this.closeAccountNav();\r\n    this._router.navigate([Project353Routes.myaccount + '/' + this.userRole + '/' + Project353Routes.manageaccount + '/' + tab + '/' + 'settings'], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToHelpAndSupport(tab: number) {\r\n    this.closeAccountNav();\r\n    this._router.navigate([Project353Routes.myaccount + '/' + this.userRole + '/' + Project353Routes.manageaccount + '/' + tab + '/' + 'helpandsupport'], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  openNav() {\r\n    if (this.sideNavOpen === false) {\r\n      this.closeAccountNav();\r\n      document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n      this.sideNavOpen = true;\r\n      this.accountSideNavOpen = false;\r\n    } else if (this.sideNavOpen === true) {\r\n      this.closeNav();\r\n    }\r\n  }\r\n\r\n  openAccountSideNav() {\r\n    if (this.accountSideNavOpen === false) {\r\n      this.closeNav();\r\n      document.getElementById(\"accountSidenav\").style.width = \"250px\";\r\n      this.accountSideNavOpen = true;\r\n      this.sideNavOpen = false;\r\n    } else if (this.accountSideNavOpen === true) {\r\n      this.closeAccountNav();\r\n    }\r\n  }\r\n\r\n  closeNav() {\r\n    document.getElementById(\"mySidenav\").style.width = \"0\";\r\n    this.sideNavOpen = false;\r\n    this.accountSideNavOpen = false;\r\n  }\r\n\r\n  closeAccountNav() {\r\n    document.getElementById(\"accountSidenav\").style.width = \"0\";\r\n    this.accountSideNavOpen = false;\r\n    this.sideNavOpen = false;\r\n  }\r\n\r\n  manageUsers() {\r\n    if (this.loginStatus) {\r\n      this.closeNav();\r\n      this._router.navigate([Project353Routes.mybusiness + '/' + 0 + '/' + Project353Routes.manageroles], { relativeTo: this._activatedRoute });\r\n    }\r\n  }\r\n\r\n  manageProject() {\r\n    if (this.loginStatus) {\r\n      this.closeNav();\r\n      this._router.navigate([Project353Routes.mybusiness + '/' + 0 + '/' + Project353Routes.manageProject], { relativeTo: this._activatedRoute });\r\n    }\r\n  }\r\n\r\n  signOut() {\r\n    // this._loginUtilityService.clearUserLoginData();\r\n    // this._loginUtilityService.setUserLoginData(null);\r\n    this.loginStatus = false;\r\n    this.closeAccountNav();\r\n    this._router.navigate([Project353Routes.login], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n}\r\n","<body>\r\n\r\n  <div class=\"navbar navbar-expand-sm|md|lg|xl header bg-info justify-content-between fixed-top\">\r\n    <a (click)=\"navigateToAboutUs()\" class=\"logo text-white\">Project <img class=\"img-fluid\"\r\n        src=\"https://picsum.photos/285/200/?image=0&random\" class=\"logo-img\" alt=\"Cinque Terre\"> 353</a>\r\n    <div class=\"form-inline header-search\">\r\n      <input class=\"form-control mr-sm-2 mr-md-2 mr-lg-2 mr-xl-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n      <button class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0\">Search</button>\r\n    </div>\r\n    <div class=\"navbar navbar-expand-sm|md|lg|xl header-right text-white\">\r\n      <button class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0\" (click)=\"navigateToHome()\"><i\r\n          class=\"fa fa-fw fa-home\"></i> Home</button>\r\n      <button class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0\" (click)=\"navigateToHome()\"><i\r\n          class=\"fa fa-fw fa-search text-white\"></i> FAQ's</button>\r\n      <button class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0\" (click)=\"navigateToContactUs()\"><i\r\n          class=\"fa fa-fw fa-envelope\"></i> Contact</button>\r\n      <button *ngIf=\"!loginStatus\" class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0 user-logo-text\" (click)=\"navigateToLogin()\"><i\r\n          class=\"fa fa-fw fa-user text-white\"></i>Sign in</button>\r\n          <button *ngIf=\"loginStatus\" class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0 user-logo-text\"  data-placement=\"top\" title=\"{{fullName}}\" (click)=\"openAccountSideNav()\"><i\r\n            class=\"fa fa-fw fa-user text-white\" id=\"dropdownMenuButton\" aria-haspopup=\"true\" aria-expanded=\"false\"\r\n            data-toggle=\"dropdown\" style='font-size:20px; width: 24%;' aria-hidden=\"true\"></i>Hi {{fullName}}</button>\r\n            \r\n      <div class=\"dropdown-menu dropdown-menu-left user-dropdown\" aria-labelledby=\"dropdownMenuButton\">\r\n        <a class=\"dropdown-item\" href=\"#\">Link 1</a>\r\n        <a class=\"dropdown-item\" href=\"#\">Link 2</a>\r\n        <a class=\"dropdown-item\" href=\"#\">Link 3</a>\r\n      </div>\r\n   \r\n      <button class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0\" (click)=\"openNav()\"><span\r\n          class=\"side-nav-opt\">&#9776; </span></button>\r\n    </div>\r\n  </div>\r\n\r\n  <div id=\"mySidenav\" class=\"sidenav\">\r\n    <!-- <a href=\"javascript:void(0)\" class=\"closebtn\" (click)=\"closeNav()\">&times;</a> -->\r\n    <a (click)=\"navigateToAboutUs()\">About us</a>\r\n    <a (click)=\"navigateToServices()\">Services</a>\r\n    <a (click)=\"navigateToClients()\">Clients</a>\r\n    <a (click)=\"navigateToContactUs()\" [ngClass]=\"{'isDisabled' : !accessManageRoles}\">Contact</a>\r\n    <a *ngIf=\"loginStatus && accessManageRoles\" href=\"javascript:void(0)\" [ngClass]=\"{'isDisabled' : !loginStatus || !accessManageRoles}\" (click)=\"manageUsers()\">Manage Users</a>\r\n    <a *ngIf=\"loginStatus && accessManageProject\" href=\"javascript:void(0)\" [ngClass]=\"{'isDisabled' : !loginStatus || !accessManageProject}\" (click)=\"manageProject()\">Manage Project</a>\r\n\r\n  </div>\r\n\r\n\r\n  <div id=\"accountSidenav\" class=\"sidenav\">\r\n    <!-- <a href=\"javascript:void(0)\" class=\"closebtn\" (click)=\"closeNav()\">&times;</a> -->\r\n    <a (click)=\"navigateToHelpAndSupport(2)\">Help & Support</a>\r\n    <a (click)=\"navigateToSettings(1)\">Settings</a>\r\n    <div class=\"text-center\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0\" (click)=\"signOut()\"><i\r\n      class=\"fa fa-fw fa-envelope\"></i> Sign out </button>\r\n      </div>\r\n    <!-- <a (click)=\"navigateToClients()\">Clients</a>\r\n    <a (click)=\"navigateToContactUs()\" [ngClass]=\"{'isDisabled' : !accessManageRoles}\">Contact</a>\r\n    <a *ngIf=\"loginStatus && accessManageRoles\" href=\"javascript:void(0)\" [ngClass]=\"{'isDisabled' : !loginStatus || !accessManageRoles}\" (click)=\"manageUsers()\">Manage Users</a> -->\r\n  </div>\r\n\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Project353Routes } from 'src/app/app.component.routes';\r\n\r\n@Component({\r\n  selector: 'app-headertwo',\r\n  templateUrl: './headertwo.component.html',\r\n  styleUrls: ['./headertwo.component.css']\r\n})\r\nexport class HeadertwoComponent implements OnInit {\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  navigateToActivities() {\r\n    this._router.navigate([Project353Routes.activities], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToEvents() {\r\n    this._router.navigate([Project353Routes.events], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToMovies() {\r\n    this._router.navigate([Project353Routes.movies], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToPlays() {\r\n    this._router.navigate([Project353Routes.plays], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToSports() {\r\n    this._router.navigate([Project353Routes.sports], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-sm bg-secondary navbar-dark fixed-top header-two-margin-top\">\r\n  <ul class=\"navbar-nav\">\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link test-white\" (click)=\"navigateToMovies()\">Movies</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link test-white\" (click)=\"navigateToEvents()\">Event</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link test-white\" (click)=\"navigateToPlays()\">Plays</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link test-white\" (click)=\"navigateToSports()\">Sports</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n      <a class=\"nav-link test-white\" (click)=\"navigateToActivities()\">Activities</a>\r\n    </li>\r\n  </ul>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-imgcaurousel',\r\n  templateUrl: './imgcaurousel.component.html',\r\n  styleUrls: ['./imgcaurousel.component.css']\r\n})\r\nexport class ImgcaurouselComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container carousel-max-width carousel-padding\">\r\n    <div class=\"row\">\r\n      <div id=\"carousel\" class=\"carousel slide\" data-ride=\"carousel\">\r\n        <ol class=\"carousel-indicators\">\r\n          <li data-target=\"#carousel\" data-slide-to=\"0\" class=\"active\"></li>\r\n          <li data-target=\"#carousel\" data-slide-to=\"1\"></li>\r\n        </ol>\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"carousel-item active\">\r\n            <div class=\"d-none d-lg-block\">\r\n              <div class=\"slide-box\">\r\n                <img src=\"https://picsum.photos/285/200/?image=0&random\" alt=\"First slide\">\r\n                <img src=\"https://picsum.photos/285/200/?image=1&random\" alt=\"First slide\">\r\n                <img src=\"https://picsum.photos/285/200/?image=2&random\" alt=\"First slide\">\r\n                <img src=\"https://picsum.photos/285/200/?image=3&random\" alt=\"First slide\">\r\n              </div>\r\n            </div>\r\n            <div class=\"d-none d-md-block d-lg-none\">\r\n              <div class=\"slide-box\">\r\n                <img src=\"https://picsum.photos/240/200/?image=0&random\" alt=\"First slide\">\r\n                <img src=\"https://picsum.photos/240/200/?image=1&random\" alt=\"First slide\">\r\n                <img src=\"https://picsum.photos/240/200/?image=2&random\" alt=\"First slide\">\r\n              </div>\r\n            </div>\r\n            <div class=\"d-none d-sm-block d-md-none\">\r\n              <div class=\"slide-box\">\r\n                <img src=\"https://picsum.photos/270/200/?image=0&random\" alt=\"First slide\">\r\n                <img src=\"https://picsum.photos/270/200/?image=1&random\" alt=\"First slide\">\r\n              </div>\r\n            </div>\r\n            <div class=\"d-block d-sm-none\">\r\n              <img class=\"d-block w-100\" src=\"https://picsum.photos/600/400/?image=0&random\" alt=\"First slide\">\r\n            </div>\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <div class=\"d-none d-lg-block\">\r\n              <div class=\"slide-box\">\r\n                <img src=\"https://picsum.photos/285/200/?image=4&random\" alt=\"Second slide\">\r\n                <img src=\"https://picsum.photos/285/200/?image=5&random\" alt=\"Second slide\">\r\n                <img src=\"https://picsum.photos/285/200/?image=6&random\" alt=\"Second slide\">\r\n                <img src=\"https://picsum.photos/285/200/?image=7&random\" alt=\"Second slide\">\r\n              </div>\r\n            </div>\r\n            <div class=\"d-none d-md-block d-lg-none\">\r\n              <div class=\"slide-box\">\r\n                <img src=\"https://picsum.photos/240/200/?image=3&random\" alt=\"Second slide\">\r\n                <img src=\"https://picsum.photos/240/200/?image=4&random\" alt=\"Second slide\">\r\n                <img src=\"https://picsum.photos/240/200/?image=5&random\" alt=\"Second slide\">\r\n              </div>\r\n            </div>\r\n            <div class=\"d-none d-sm-block d-md-none\">\r\n              <div class=\"slide-box\">\r\n                <img src=\"https://picsum.photos/270/200/?image=2&random\" alt=\"Second slide\">\r\n                <img src=\"https://picsum.photos/270/200/?image=3&random\" alt=\"Second slide\">\r\n              </div>\r\n            </div>\r\n            <div class=\"d-block d-sm-none\">\r\n              <img class=\"d-block w-100\" src=\"https://picsum.photos/600/400/?image=1&random\" alt=\"Second slide\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <a class=\"carousel-control-prev\" style=\"position: inherit !important;\" href=\"#carousel\" role=\"button\" data-slide=\"prev\">\r\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a class=\"carousel-control-next\" style=\"position: inherit !important;\" href=\"#carousel\" role=\"button\" data-slide=\"next\">\r\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"sr-only\">Next</span>\r\n        </a> -->\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-activities',\r\n  templateUrl: './activities.component.html',\r\n  styleUrls: ['./activities.component.css']\r\n})\r\nexport class ActivitiesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>activities works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.css']\r\n})\r\nexport class EventsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>events works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-movies',\r\n  templateUrl: './movies.component.html',\r\n  styleUrls: ['./movies.component.css']\r\n})\r\nexport class MoviesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>movies works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-plays',\r\n  templateUrl: './plays.component.html',\r\n  styleUrls: ['./plays.component.css']\r\n})\r\nexport class PlaysComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>plays works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sports',\r\n  templateUrl: './sports.component.html',\r\n  styleUrls: ['./sports.component.css']\r\n})\r\nexport class SportsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>sports works!</p>\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatchPassword(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true, mustMatchPassword: 'No' });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { AbstractControl, ValidationErrors } from \"@angular/forms\"\r\n\r\nexport const UserNameValidation = function (control: AbstractControl): ValidationErrors | null {\r\n\r\n  let value: string = control.value || '';\r\n  let msg = \"\";\r\n  if (!value) {\r\n    return null\r\n  }\r\n\r\n  let upperCaseCharacters = /[A-Z]+/g;\r\n  let lowerCaseCharacters = /[a-z]+/g;\r\n  let numberCharacters = /[0-9]+/g;\r\n  let specialCharacters = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/;\r\n  if (upperCaseCharacters.test(value) === true || specialCharacters.test(value) === true) {\r\n    return {\r\n      userNameValidation: 'User Name must contain lowercase letters, digits only'\r\n    }\r\n\r\n  }\r\n\r\n  if (!(lowerCaseCharacters.test(value) && numberCharacters.test(value))) {\r\n    return {\r\n      userNameValidation: 'User Name must contain lowercase letters, digits only'\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Project353Routes } from '../app.component.routes';\r\n\r\n@Component({\r\n  selector: 'app-homelayout',\r\n  templateUrl: './homelayout.component.html',\r\n  styleUrls: ['./homelayout.component.css']\r\n})\r\nexport class HomelayoutComponent implements OnInit {\r\n\r\n  @HostListener('window:beforeunload') goToPage() {\r\n    this._router.navigate(['/home']);\r\n  }\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,) { }\r\n\r\n  ngOnInit(): void {\r\n  \r\n  }\r\n\r\n  navigateToAboutUs() {\r\n    this._router.navigate([Project353Routes.aboutus], { relativeTo: this._activatedRoute });\r\n  } \r\n\r\n  navigateToContactUs() {\r\n    this._router.navigate([Project353Routes.contactus], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToServices() {\r\n    this._router.navigate([Project353Routes.services], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToClients() {\r\n    this._router.navigate([Project353Routes.clients], { relativeTo: this._activatedRoute });\r\n  }\r\n}\r\n","<div id=\"demo\" class=\"carousel slide\" data-ride=\"carousel\" data-interval=\"4000\">\r\n  <ul class=\"carousel-indicators\">\r\n    <li data-target=\"#demo\" data-slide-to=\"0\" class=\"active\"></li>\r\n    <li data-target=\"#demo\" data-slide-to=\"1\"></li>\r\n    <li data-target=\"#demo\" data-slide-to=\"2\"></li>\r\n  </ul>\r\n  <div class=\"carousel-inner\">\r\n    <div class=\"carousel-item active\">\r\n      <img\r\n        src=\"https://c4.wallpaperflare.com/wallpaper/465/952/896/prabhas-8k-4k-baahubali-2-the-conclusion-wallpaper-preview.jpg\"\r\n        alt=\"Los Angeles\" width=\"1100\" height=\"500\">\r\n      <div class=\"carousel-caption\">\r\n        <button class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0\">Book Ticket</button>\r\n        <h3>Baahubali 2</h3>\r\n        <p>Jai Maahismathi</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img\r\n        src=\"https://4.bp.blogspot.com/-HmCbVjEb-ww/VzRalabyHJI/AAAAAAAAAFA/lj9U-_tgdR8XqgXzWp4yrWuWOtU9Fe-jwCLcB/s1600/Bahubali%2BPrabhas%2BWallpaper%2B2%2528SouthyMania%2529.jpg\"\r\n        alt=\"Chicago\" width=\"1100\" height=\"500\">\r\n      <div class=\"carousel-caption\">\r\n        <button class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0\">Book Ticket</button>\r\n        <h3>Baahubali 2</h3>\r\n        <p>Jai Maahismathi</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"carousel-item\">\r\n      <img src=\"https://udagam360.com/wp-content/uploads/2017/05/Bahubali-2-prabhas-hd-wallpaper.jpg\" alt=\"New York\"\r\n        width=\"1100\" height=\"500\">\r\n      <div class=\"carousel-caption\">\r\n        <button class=\"btn btn-outline-success my-2 my-sm-0 text-white btn-border-0\">Book Ticket</button>\r\n        <h3>Baahubali 2</h3>\r\n        <p>Jai Maahismathi</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- <a class=\"carousel-control-prev\" href=\"#demo\" data-slide=\"prev\">\r\n      <span class=\"carousel-control-prev-icon\"></span>\r\n    </a>\r\n    <a class=\"carousel-control-next\" href=\"#demo\" data-slide=\"next\">\r\n      <span class=\"carousel-control-next-icon\"></span>\r\n    </a> -->\r\n</div>\r\n\r\n<div class=\"container-sm|md|lg|xl mt-3 pt-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-2 col-md-2 col-lg-2 col-xl-2\">\r\n      <div class=\"sidenav bg-info\">\r\n        <a (click)=\"navigateToAboutUs()\" class=\"text-white\">About us</a>\r\n        <a (click)=\"navigateToServices()\" class=\"text-white\">Services</a>\r\n        <a (click)=\"navigateToClients()\" class=\"text-white\">Clients</a>\r\n        <a (click)=\"navigateToContactUs()\" class=\"text-white\">Contact</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-10 col-md-10 col-lg-10 col-xl-10\">\r\n      <div class=\"card-group\">\r\n        <div class=\"card-deck\">\r\n          <div class=\"card\">\r\n            <img class=\"card-img-top card-img-height\"\r\n              src=\"https://udagam360.com/wp-content/uploads/2017/05/Bahubali-2-prabhas-hd-wallpaper.jpg\"\r\n              alt=\"Card image cap\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">Baahubali 1</h5>\r\n              <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional\r\n                content. This content is a little bit longer.</p>\r\n            </div>\r\n            <div class=\"card-footer pt-1 pb-1\">\r\n              <small class=\"text-muted\">\r\n                <div class=\"col text-center\">\r\n                  <button class=\"btn btn-outline-success my-2 my-sm-0 text-gray btn-border-0\">Book Ticket</button>\r\n                </div>\r\n              </small>\r\n            </div>\r\n          </div>\r\n          <div class=\"card\">\r\n            <img class=\"card-img-top card-img-height\"\r\n              src=\"https://c4.wallpaperflare.com/wallpaper/465/952/896/prabhas-8k-4k-baahubali-2-the-conclusion-wallpaper-preview.jpg\"\r\n              alt=\"Card image cap\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">Baahubali 2</h5>\r\n              <p class=\"card-text\">This card has supporting text below as a natural lead-in to additional content.</p>\r\n            </div>\r\n            <div class=\"card-footer pt-1 pb-1\">\r\n              <small class=\"text-muted\">\r\n                <div class=\"col text-center\">\r\n                  <button class=\"btn btn-outline-success my-2 my-sm-0 text-gray btn-border-0\">Book Ticket</button>\r\n                </div>\r\n              </small>\r\n            </div>\r\n          </div>\r\n          <div class=\"card\">\r\n            <img class=\"card-img-top card-img-height\"\r\n              src=\"https://4.bp.blogspot.com/-HmCbVjEb-ww/VzRalabyHJI/AAAAAAAAAFA/lj9U-_tgdR8XqgXzWp4yrWuWOtU9Fe-jwCLcB/s1600/Bahubali%2BPrabhas%2BWallpaper%2B2%2528SouthyMania%2529.jpg\"\r\n              alt=\"Card image cap\">\r\n            <div class=\"card-body text-overlay\">\r\n              <h5 class=\"card-title\">Baahubali 1</h5>\r\n              <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional\r\n                content. This card has even longer content than the first to show that equal height action.</p>\r\n            </div>\r\n            <div class=\"card-footer pt-1 pb-1\">\r\n              <small class=\"text-muted\">\r\n                <div class=\"col text-center\">\r\n                  <button class=\"btn btn-outline-success my-2 my-sm-0 text-gray btn-border-0\">Book Ticket</button>\r\n                </div>\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.component.html',\r\n  styleUrls: ['./faq.component.css']\r\n})\r\nexport class FaqComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>faq works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-helpandsupport',\r\n  templateUrl: './helpandsupport.component.html',\r\n  styleUrls: ['./helpandsupport.component.css']\r\n})\r\nexport class HelpandsupportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>helpandsupport works!</p>\r\n","import { Component, OnInit, ChangeDetectorRef, ElementRef, ViewChild } from '@angular/core';\r\nimport { UserDetails, UserViewDetails } from 'src/app/interfaces/UserDetails';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserService } from 'src/app/services/user-service';\r\nimport { UserNameValidation } from 'src/app/helpers/username-validation';\r\nimport { UserInfo } from 'src/app/interfaces/User';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { LoginUtilityService } from 'src/app/shared/services/loginutilityservice';\r\nimport { LoginService } from 'src/app/services/login-service';\r\nimport { ChangePasswordRequest, ChangePasswordResponse } from 'src/app/interfaces/ChangePasswordDetails';\r\nimport { UserRoleTypeName, UserRoleType } from 'src/app/shared/userroleenum';\r\nimport { ProjectPropertiesService } from 'src/app/services/project-properties-service';\r\nimport { AddressService } from 'src/app/services/address-service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  subscriptions: Subscription;\r\n  userName: string;\r\n  fullName: string;\r\n  userRole: number;\r\n  userId: number;\r\n\r\n  showSpinner = false;\r\n  roleName: string = '';\r\n\r\n  userDetails: UserDetails = {\r\n    userId: 0\r\n  };\r\n  userInfo: UserInfo;\r\n\r\n  userViewDetails: UserViewDetails = {};\r\n\r\n  settingsForm: FormGroup;\r\n  settingsSubmitted = false;\r\n\r\n  selectedTab = 1;\r\n\r\n  genderRadio: string[] = ['Male', 'Female'];\r\n \r\n  maritalStatusRadio: string[] = ['Single', 'Married'];\r\n\r\n  changePasswordSubmitted = false\r\n  changePasswordForm: FormGroup;\r\n\r\n  changePasswordDetails: ChangePasswordRequest;\r\n  changePasswordResponse: ChangePasswordResponse;\r\n  submitted: boolean;\r\n  citiesList: Array<MapItem> = [];\r\n  statesList: Array<MapItem> = [];\r\n  countryList: Array<MapItem> = [];\r\n  state?: string;\r\n  country = 'India';\r\n  selectedCountry = 'India';\r\n  selectedState = undefined;\r\n  selectedCity = undefined;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private _userService: UserService,\r\n    private _loginUtilityService: LoginUtilityService,\r\n    private _loginService: LoginService,\r\n    private cd: ChangeDetectorRef,\r\n    public fb: FormBuilder,\r\n    private _projectPropertiesService: ProjectPropertiesService,\r\n    private _addressService: AddressService\r\n\r\n  ) { }\r\n\r\n  @ViewChild('fileInput') el: ElementRef;\r\n  imageUrl: any ;\r\n  editFile: boolean = true;\r\n  removeUpload: boolean = true;\r\n\r\n  registrationForm = this.fb.group({\r\n    file: [null]\r\n  })\r\n\r\n  ngOnInit(): void {\r\n    this.userDetails.userAddress = {};\r\n    this.userDetails.userAddress.country = this.country\r\n    this.userViewDetails.userAddress = {};\r\n    this.userDetails.userAddress.state = undefined;\r\n    this.userDetails.userAddress.city = undefined;\r\n    this.changePasswordDetails = {};\r\n    this.subscriptions =\r\n    this._loginUtilityService.getUserLoginData$().subscribe(userLoginData => {\r\n      if (userLoginData && userLoginData.userRole) {\r\n        this.userName = userLoginData.userName;\r\n        this.fullName = userLoginData.fullName;\r\n        this.userRole = userLoginData.userRole;\r\n        if (this.userRole === UserRoleType.SUPERADMIN) {\r\n          this.roleName = UserRoleTypeName.SUPERADMIN;\r\n        } else if (this.userRole === UserRoleType.ADMIN) {\r\n          this.roleName = UserRoleTypeName.ADMIN;\r\n        } else if (this.userRole === UserRoleType.MANAGER) {\r\n          this.roleName = UserRoleTypeName.MANAGER;\r\n        } else {\r\n          this.roleName = UserRoleTypeName.USER;\r\n        } \r\n        this.userId = userLoginData.uid;\r\n        this.getUserById(this.userId);\r\n      }\r\n    });\r\n    this.getStatesAndCountriesList();\r\n    this.createSettingsForm();\r\n    this.createChangePasswordForm();\r\n  }\r\n\r\n  getStatesAndCountriesList() {\r\n    this.showSpinner = true;\r\n    this._projectPropertiesService.getCountriesAndStatesList().subscribe(\r\n      data => {\r\n        debugger;\r\n        console.log(data);\r\n        let statesMap = data.statesMap;\r\n        Object.keys(statesMap).forEach(key=>{\r\n          this.statesList.push({id: +key, name: statesMap[key]})\r\n        });\r\n        let countriesMap = data.countriesMap;\r\n        Object.keys(countriesMap).forEach(key=>{\r\n          this.countryList.push({id: +key, name: countriesMap[key]})\r\n        });\r\n        let citiesMap = data.citiesMap;\r\n        Object.keys(citiesMap).forEach(key=>{\r\n          this.citiesList.push({id: +key, name: citiesMap[key]})\r\n        });\r\n        this.getStatesListByCountryId(104);\r\n        this.showSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  getCountryList() {\r\n    this.showSpinner = true;\r\n    this._projectPropertiesService.getCountries().subscribe(\r\n      data => {\r\n        debugger;\r\n        console.log(data);\r\n        let countriesMap = data.countriesMap;\r\n        Object.keys(countriesMap).forEach(key=>{\r\n          this.countryList.push({id: +key, name: countriesMap[key]})\r\n        });\r\n        this.showSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  getStatesListByCountryId(countryId: number) {\r\n    this.showSpinner = true;\r\n    this._addressService.getStatesListByCountryId(countryId).subscribe(\r\n      data => {\r\n        debugger;\r\n        console.log(data);\r\n        let statesMap = data;\r\n        Object.keys(statesMap).forEach(key=>{\r\n          this.statesList.push({id: +key, name: statesMap[key]})\r\n        });\r\n        if (this.userId && this.userDetails && this.userDetails.userAddress && \r\n          this.userDetails.userAddress.state && this.userDetails.userAddress.state !== undefined) {\r\n            this.statesList.filter(item=> {\r\n              if (item.name === this.userDetails.userAddress.state) {\r\n                this.getCitiesListByCountryId(item.id);\r\n              }\r\n            });\r\n          }\r\n        this.showSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  getCitiesListByCountryId(stateId: number) {\r\n    this.showSpinner = true;\r\n    this._addressService.getCitiesListByStateId(stateId).subscribe(\r\n      data => {\r\n        debugger;\r\n        console.log(data);\r\n        let citiesMap = data;\r\n        this.citiesList = [];\r\n        Object.keys(citiesMap).forEach(key=>{\r\n          this.citiesList.push({id: +key, name: citiesMap[key]})\r\n        });\r\n        this.settingsForm.controls['city'].enable();\r\n        this.showSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  getUserById(userId: number) {\r\n    this.showSpinner = true;\r\n    let a = this._userService.getUserById(userId).subscribe(\r\n      data => {\r\n        debugger;\r\n        console.log(data);\r\n        this.userViewDetails = JSON.parse(JSON.stringify(data));;\r\n        this.userDetails = JSON.parse(JSON.stringify(data));\r\n        this.fullName = this.userDetails.fullName;\r\n        this.userDetails.userAddress.country = 'India';\r\n        this.userViewDetails.userAddress.country = 'INDIA';\r\n        this.showSpinner = false;\r\n        this.userDetails.userId = data.uid;\r\n        this.changePasswordDetails.userId = data.uid;\r\n        this.imageUrl = this.userDetails.imageUrl;\r\n        this.selectedState = this.userDetails.userAddress.state;\r\n        this.selectedCity = this.userDetails.userAddress.city;\r\n      }\r\n    );\r\n  }\r\n\r\n  get settingsFormControl() { return this.settingsForm.controls; }\r\n\r\n  get changePasswordFormControl() { return this.changePasswordForm.controls; }\r\n\r\n  createSettingsForm() {\r\n    this.settingsForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      userName: [{value: '', disabled: true}, [Validators.required, UserNameValidation]],\r\n      email: [{value: '', disabled: true}, [Validators.required, Validators.email]],\r\n      phoneNumber: [{value: '', disabled: true}, [Validators.required, Validators.minLength(10)]],\r\n      gender:['', Validators.required],\r\n      married:['', Validators.required],\r\n      addressOne: ['', Validators.required],\r\n      addressTwo: ['', Validators.required],\r\n      landMark: ['', Validators.required],\r\n      city: [{value:'', disabled: true}, Validators.required],\r\n      state: [{value:'', disabled: false}, Validators.required],\r\n      country: [{value: '', disabled: true}],\r\n      roleName: [{value: '', disabled: true}],\r\n    });\r\n  }\r\n\r\n  createChangePasswordForm() {\r\n    this.changePasswordForm = this.formBuilder.group({\r\n      oldPassword: ['', Validators.required],\r\n      newPassword: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required],\r\n      roleName: [{value: '', disabled: true}],\r\n      fullName: [{value: '', disabled: true}]\r\n    })\r\n  }\r\n\r\n  selectTab(tabIndex: number) {\r\n    this.selectedTab = tabIndex\r\n  }\r\n\r\n  saveSettings() {\r\n    debugger;\r\n    this.settingsSubmitted = true;\r\n    this.showSpinner = true;\r\n    if (this.settingsForm.invalid) {\r\n      setTimeout(() => this.toastr.warning('You must fill all the Required fields', 'Alert', { timeOut: 3000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n      this.showSpinner = false;\r\n      return;\r\n    }\r\n    this.userDetails.userId = this.userId;\r\n    this.userDetails.imageUrl = this.imageUrl;\r\n    \r\n    debugger;\r\n    this._userService.saveSettings(this.userDetails).subscribe(\r\n      data => {\r\n        this.userDetails = JSON.parse(JSON.stringify(data));\r\n        this.userViewDetails = JSON.parse(JSON.stringify(data));\r\n        if (this.userDetails.errors === null) {\r\n          this.showSpinner = false;\r\n          setTimeout(() => this.toastr.success('Profile updated Successfully', 'Settings', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n          document.getElementById(\"view\").click();\r\n        } else {\r\n          this.showSpinner = false;\r\n          this.toastr.error(this.userDetails.errors[0].errorMessage)\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(error);\r\n        this.showSpinner = false;\r\n        setTimeout(() => this.toastr.error('Profile update Failed - unknown error', 'Settings', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n      }\r\n    )\r\n    debugger;\r\n  }\r\n\r\n  close() {}\r\n\r\n  changePassword() {\r\n    this.changePasswordSubmitted = true;\r\n    this.showSpinner = true;\r\n    if (this.changePasswordForm.invalid) {\r\n      setTimeout(() => this.toastr.warning('You must fill all the Required fields', 'Alert', { timeOut: 3000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n      this.showSpinner = false;\r\n      return;\r\n    }\r\n    this._loginService.changePassword(this.changePasswordDetails).subscribe(\r\n      data => {\r\n        if (data !== null && data.changePasswordStatus) {\r\n          this.changePasswordResponse = data;\r\n          console.log(data);\r\n          console.log(\"Success\");\r\n          setTimeout(() => this.toastr.success('Your password has changed Successful', 'Change Password', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n          document.getElementById(\"view\").click();\r\n          this.changePasswordDetails = {};\r\n          this.showSpinner = false;\r\n          this.changePasswordSubmitted = false;\r\n        } else {\r\n          console.log('Failed');\r\n          this.showSpinner = false;\r\n          setTimeout(() => this.toastr.error('Password change Failed - ' + data.message, 'Change Password', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n        }\r\n      }, (error: any) => {\r\n        console.log('Failed');\r\n        this.showSpinner = false;\r\n        setTimeout(() => this.toastr.error('Password change Failed - unknown error', 'Change Password', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  uploadFile(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.imageUrl = reader.result;\r\n        this.userDetails.profilePicture = \"Y\";\r\n        this.registrationForm.patchValue({\r\n          file: reader.result\r\n        });\r\n        this.editFile = false;\r\n        this.removeUpload = true;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  // Function to remove uploaded file\r\n  removeUploadedFile() {\r\n    let newFileList = Array.from(this.el.nativeElement.files);\r\n    this.imageUrl = null;\r\n    this.userDetails.profilePicture = 'N';\r\n    this.editFile = true;\r\n    this.removeUpload = false;\r\n    this.registrationForm.patchValue({\r\n      file: [null]\r\n    });\r\n  }\r\n  \r\n  // Submit Registration Form\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if(!this.registrationForm.valid) {\r\n      alert('Please fill all the required fields to create a super hero!')\r\n      return false;\r\n    } else {\r\n      console.log(this.registrationForm.value)\r\n    }\r\n  }\r\n\r\n  onStateSelection() {\r\n    \r\n  }\r\n\r\n  countryChange(event){\r\n    console.log(event);\r\n  }\r\n\r\n  stateChange(state: any){\r\n    this.selectedState = state;\r\n    this.selectedCity = undefined;\r\n    console.log(state);\r\n    this.statesList.filter( x=> {\r\n      if (x.name === state) {\r\n        debugger;\r\n        this.getCitiesListByCountryId(x.id);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport interface MapItem {\r\n  id?: number;\r\n  name?: string;\r\n}\r\n","<div class=\"card mt-3\">\r\n    <div class=\"card-header\">\r\n        <ul class=\"nav nav-tabs card-header-tabs\">\r\n            <li class=\"nav-item content-cursor-pointer\">\r\n                <a id=\"view\" class=\"nav-link active\" data-toggle=\"tab\" (click)=\"selectTab(1)\">View Profile</a>\r\n            </li>\r\n            <li class=\"nav-item content-cursor-pointer\">\r\n                <a id=\"edit\" class=\"nav-link\" data-toggle=\"tab\" (click)=\"selectTab(2)\">Edit Profile</a>\r\n            </li>\r\n            <li class=\"nav-item content-cursor-pointer\">\r\n                <a class=\"nav-link\" data-toggle=\"tab\" (click)=\"selectTab(3)\">Change Password</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"card-body\" *ngIf=\"selectedTab===1\">\r\n        <div class=\"ml-3\">\r\n            <div class=\"row custom-wrapper\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"group-gap\">\r\n                        <!-- Upload image -->\r\n                        <div class=\"avatar-upload\">\r\n                            <div class=\"avatar-edit\">\r\n                                <input class=\"content-display-none\" type='file' id=\"imageUpload\"\r\n                                    accept=\".png, .jpg, .jpeg\" #fileInput (change)=\"uploadFile($event)\" />\r\n                            </div>\r\n                            <div class=\"img-picture\">\r\n                                <div class=\"img-preview\" id=\"imagePreview\"\r\n                                    [style.backgroundImage]=\"'url('+ imageUrl +')'\">\r\n                                </div>\r\n\r\n                            </div>\r\n                            <h4 class=\"card-title text-capitalize\">{{fullName}}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"viewFullName\">Full Name(Display Name):</label>\r\n                    <input type=\"text\" disabled=\"true\" [(ngModel)]=\"userViewDetails.fullName\" class=\"form-control\"\r\n                        id=\"fullName\" placeholder=\"Full Name\" name=\"fullNameView\">\r\n                </div>\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"viewUserName\">User Name:</label>\r\n                    <input type=\"text\" disabled=\"true\" [(ngModel)]=\"userViewDetails.userName\" class=\"form-control\"\r\n                        id=\"userName\" placeholder=\"User Name\" name=\"usersignupemail1\">\r\n                </div>\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"viewUserRole\">User Role:</label>\r\n                    <input type=\"text\" disabled=\"true\" [(ngModel)]=\"roleName\" class=\"form-control\" id=\"roleName\"\r\n                        placeholder=\"User Role\" name=\"roleName\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"viewEmail\">Email:</label>\r\n                    <input type=\"text\" disabled=\"true\" [(ngModel)]=\"userViewDetails.email\" class=\"form-control\"\r\n                        id=\"email\" maxlength=\"80\" placeholder=\"Email Address\" name=\"usersignupemail\">\r\n                </div>\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"phoneNumber\">Phone Number:</label>\r\n                    <input type=\"number\" disabled=\"true\" [(ngModel)]=\"userViewDetails.phoneNumber\" class=\"form-control\"\r\n                        placeholder=\"Phone Number\" name=\"userviewphonenumber\">\r\n                </div>\r\n            </div>\r\n            <br>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4\">\r\n                    <label for=\"gender\">Gender: </label><br />\r\n                    <div class=\"form-check-inline\" *ngFor=\"let g of genderRadio; let i = index\">\r\n                        <input id=\"g{{i}}\" name=\"gender\" type=\"radio\" [value]=\"g\"\r\n                            [(ngModel)]=\"userViewDetails.userAddress.gender\" disabled />\r\n                        <label for=\"\" class=\"radio-label\">{{g}}</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <label for=\"gender\">Marital Status: </label><br />\r\n                    <div class=\"form-check-inline\" *ngFor=\"let m of maritalStatusRadio; let i = index\">\r\n                        <input id=\"m{{i}}\" name=\"married\" type=\"radio\" [value]=\"m\"\r\n                            [(ngModel)]=\"userViewDetails.userAddress.maritalStatus\" disabled />\r\n                        <label for=\"\" class=\"radio-label\">{{m}}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"addressOne\">Address Line 1:</label>\r\n                    <input disabled=\"true\" type=\"text\" [(ngModel)]=\"userViewDetails.userAddress.addressOne\"\r\n                        class=\"form-control\" id=\"email\" maxlength=\"800\" placeholder=\"Address line 1\" name=\"addressOne\">\r\n                </div>\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"phoneNumber\">Address Line 2:</label>\r\n                    <input disabled=\"true\" type=\"text\" [(ngModel)]=\"userViewDetails.userAddress.addressTwo\"\r\n                        class=\"form-control\" placeholder=\"Address line 2\" name=\"addressTwo\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"landMark\">Land Mark:</label>\r\n                    <input disabled=\"true\" type=\"text\" [(ngModel)]=\"userViewDetails.userAddress.landMark\"\r\n                        class=\"form-control\" id=\"email\" maxlength=\"800\" placeholder=\"Land mark\" name=\"landMark\">\r\n                </div>\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"phoneNumber\">City:</label>\r\n                    <input disabled=\"true\" type=\"text\" [(ngModel)]=\"userViewDetails.userAddress.city\"\r\n                        class=\"form-control\" placeholder=\"City\" name=\"city\">\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"state\">State:</label>\r\n                    <input disabled=\"true\" type=\"text\" [(ngModel)]=\"userViewDetails.userAddress.state\"\r\n                        class=\"form-control\" id=\"email\" maxlength=\"800\" placeholder=\"State\" name=\"state\">\r\n                </div>\r\n                <div class=\"col-sm-4 form-group\">\r\n                    <label for=\"phoneNumber\">Country:</label>\r\n                    <input disabled=\"true\" type=\"text\" [(ngModel)]=\"userViewDetails.userAddress.country\"\r\n                        class=\"form-control\" placeholder=\"Country\" name=\"addressTwo\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"selectedTab===2\" class=\"card-body\">\r\n        <div class=\"ml-3\">\r\n            <div class=\"row custom-wrapper\">\r\n                <div class=\"col-md-12\">\r\n                    <!-- Form starts -->\r\n                    <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"group-gap\">\r\n                            <!-- Upload image -->\r\n                            <div class=\"avatar-upload\">\r\n                                <div class=\"avatar-edit\">\r\n                                    <input class=\"content-display-none\" type='file' id=\"imageUpload\"\r\n                                        accept=\".png, .jpg, .jpeg\" #fileInput (change)=\"uploadFile($event)\" />\r\n                                </div>\r\n                                <div class=\"img-picture\">\r\n                                    <div class=\"img-preview\" id=\"imagePreview\"\r\n                                        [style.backgroundImage]=\"'url('+ imageUrl +')'\">\r\n                                    </div>\r\n                                </div>\r\n                                <h4 class=\"card-title text-capitalize\">{{fullName}}</h4>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"button\" id=\"removeimg\" class=\"btn btn-danger btn-sm\" data-dismiss=\"modal\"\r\n                            (click)=\"removeUploadedFile()\">Remove</button>\r\n                        <button type=\"submit\" class=\"btn btn-primary text-center btn-sm ml-2\"\r\n                            (click)=\"fileInput.click()\">Upload Image</button>\r\n                    </form><!-- Form ends -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- <h5 class=\"card-title text-capitalize\">{{userName}} : Edit Profile</h5> -->\r\n        <form [formGroup]=\"settingsForm\" novalidate>\r\n            <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"fulName\">Full Name(Display Name):</label>\r\n                        <input type=\"text\" formControlName=\"fullName\" [(ngModel)]=\"userDetails.fullName\"\r\n                            class=\"form-control\" id=\"fullName\" placeholder=\"Full Name\" name=\"fullName\"\r\n                            [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.fullName.errors }\">\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.fullName.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"settingsFormControl.fullName.errors.required\">Full Name is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"userName\">User Name:</label>\r\n                        <input type=\"text\" formControlName=\"userName\" [(ngModel)]=\"userDetails.userName\"\r\n                            class=\"form-control\" id=\"userName\" placeholder=\"User Name\" name=\"usersignupemail1\"\r\n                            [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.userName.errors }\">\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.userName.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"settingsFormControl.userName.errors.required\">User Name is required</div>\r\n                            <div class=\"error-text\" *ngIf=\"settingsForm.get('userName').hasError('userNameValidation')\">\r\n                                {{settingsForm.get('userName').errors['userNameValidation']}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"userRole\">User Role:</label>\r\n                        <input type=\"text\" formControlName=\"roleName\" [(ngModel)]=\"roleName\" class=\"form-control\"\r\n                            id=\"roleName\" placeholder=\"User Name\" name=\"roleName\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <label for=\"email\">Email:</label>\r\n                        <input type=\"text\" formControlName=\"email\" [(ngModel)]=\"userDetails.email\" class=\"form-control\"\r\n                            id=\"email\" maxlength=\"80\" placeholder=\"Email Address\" name=\"usersignupemail\"\r\n                            [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.email.errors }\">\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.email.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"settingsFormControl.email.errors.required\">Email is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <label for=\"phoneNumber\">Phone Number:</label>\r\n                        <input type=\"number\" formControlName=\"phoneNumber\" [(ngModel)]=\"userDetails.phoneNumber\"\r\n                            class=\"form-control\" placeholder=\"Phone Number\" name=\"usersignupphonenumber\"\r\n                            [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.phoneNumber.errors }\">\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.phoneNumber.errors\"\r\n                            class=\"invalid-feedback\">\r\n                            <div *ngIf=\"settingsFormControl.phoneNumber.errors.required\">Phone Number is required</div>\r\n                            <div *ngIf=\"settingsFormControl.phoneNumber.errors.minLenght\">Phone Number must be at least\r\n                                10 digits\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <label for=\"gender\">Gender: </label><br />\r\n                        <div class=\"form-check-inline\" *ngFor=\"let g of genderRadio; let i = index\">\r\n                            <input formControlName=\"gender\" id=\"g{{i}}\" name=\"gender\" type=\"radio\" [value]=\"g\"\r\n                                [(ngModel)]=\"userDetails.userAddress.gender\"\r\n                                [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.gender.errors }\" />\r\n                            <label for=\"\" class=\"radio-label\">{{g}}</label>\r\n                        </div>\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.gender.errors\"\r\n                            class=\"invalid-feedback error-display-block\">\r\n                            <div *ngIf=\"settingsFormControl.gender.errors.required\">Gender is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <label for=\"gender\">Marital Status: </label><br />\r\n                        <div class=\"form-check-inline\" *ngFor=\"let m of maritalStatusRadio; let i = index\">\r\n                            <input formControlName=\"married\" id=\"m{{i}}\" name=\"married\" type=\"radio\" [value]=\"m\"\r\n                                [(ngModel)]=\"userDetails.userAddress.maritalStatus\"\r\n                                [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.married.errors }\" />\r\n                            <label for=\"\" class=\"radio-label\">{{m}}</label>\r\n                        </div>\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.married.errors\"\r\n                            class=\"invalid-feedback error-display-block\">\r\n                            <div *ngIf=\"settingsFormControl.married.errors.required\">Marital Status is required</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"addressOne\">Address Line 1:</label>\r\n                        <input type=\"text\" formControlName=\"addressOne\" [(ngModel)]=\"userDetails.userAddress.addressOne\"\r\n                            class=\"form-control\" id=\"email\" maxlength=\"800\" placeholder=\"Address line 1\"\r\n                            name=\"addressOne\"\r\n                            [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.addressOne.errors }\">\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.addressOne.errors\"\r\n                            class=\"invalid-feedback error-display-block\">\r\n                            <div *ngIf=\"settingsFormControl.addressOne.errors.required\">Address line 1 is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"phoneNumber\">Address Line 2:</label>\r\n                        <input type=\"text\" formControlName=\"addressTwo\" [(ngModel)]=\"userDetails.userAddress.addressTwo\"\r\n                            class=\"form-control\" placeholder=\"Address line 2\" name=\"addressTwo\"\r\n                            [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.addressTwo.errors }\">\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.addressTwo.errors\"\r\n                            class=\"invalid-feedback error-display-block\">\r\n                            <div *ngIf=\"settingsFormControl.addressTwo.errors.required\">Address Line 2 is required</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"landMark\">Land Mark:</label>\r\n                        <input type=\"text\" formControlName=\"landMark\" [(ngModel)]=\"userDetails.userAddress.landMark\"\r\n                            class=\"form-control\" id=\"email\" maxlength=\"800\" placeholder=\"Land mark\" name=\"landMark\"\r\n                            [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.landMark.errors }\">\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.landMark.errors\"\r\n                            class=\"invalid-feedback error-display-block\">\r\n                            <div *ngIf=\"settingsFormControl.landMark.errors.required\">Land Mark is required</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"city\">City:</label>\r\n                        <select placeholder=\"Select\" [(ngModel)]=\"userDetails.userAddress.city\" class=\"form-control\"\r\n                            formControlName=\"city\" name=\"city\" (ngModelChange)=\"onStateSelection()\"\r\n                            [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.city.errors }\">\r\n                            <option [ngValue]=\"undefined\" disabled>Select City </option>\r\n                            <option *ngFor=\"let city of citiesList\" [ngValue]=\"city.name\" class=\"text-uppercase\" [selected]=\"selectedCity\">{{city.name | uppercase}}</option>\r\n                        </select>\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.city.errors\"\r\n                            class=\"invalid-feedback error-display-block\">\r\n                            <div *ngIf=\"settingsFormControl.city.errors.required\">City is required</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"name\">State:</label>\r\n                        <select placeholder=\"Select\" [(ngModel)]=\"userDetails.userAddress.state\" class=\"form-control\"\r\n                            formControlName=\"state\" name=\"state\" (ngModelChange)=\"stateChange($event)\"\r\n                            [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.state.errors }\">\r\n                            <option [ngValue]=\"undefined\" [selected]=\"selectedCity\" disabled>Select State </option>\r\n                            <option *ngFor=\"let state of statesList\" [ngValue]=\"state.name\" class=\"text-uppercase\" [selected]=\"state.name === selectedState\">{{state.name}}</option>\r\n                        </select>\r\n                        <div *ngIf=\"settingsSubmitted && settingsFormControl.state.errors\"\r\n                            class=\"invalid-feedback error-display-block\">\r\n                            <div *ngIf=\"settingsFormControl.state.errors.required\">State is required</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"name\">Country:</label>\r\n                        <select placeholder=\"Select\" (change)=\"countryChange($event)\" [(ngModel)]=\"userDetails.userAddress.country\" class=\"form-control\"\r\n                            formControlName=\"country\" name=\"country\"\r\n                            [ngClass]=\"{ 'is-invalid': settingsSubmitted && settingsFormControl.country.errors }\">\r\n                            <option [ngValue]=\"undefined\" disabled>Select Country </option>\r\n                            <option *ngFor=\"let country of countryList\" [value]=\"country.name\" [selected]=\"country.name === selectedCountry\">{{country.name | uppercase}}</option>\r\n                        </select>\r\n                        <!-- <div *ngIf=\"settingsSubmitted && settingsFormControl.country.errors\"\r\n                            class=\"invalid-feedback error-display-block\">\r\n                            <div *ngIf=\"settingsFormControl.country.errors.required\">Country is required</div>\r\n                        </div> -->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Modal footer -->\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" id=\"signup-close\" class=\"btn btn-danger\" data-dismiss=\"modal\"\r\n                    (click)=\"close()\">Close</button>\r\n\r\n                <button *ngIf=\"showSpinner\" class=\"btn btn-primary text-center\" type=\"button\" [disabled]=\"showSpinner\">\r\n                    <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    Save\r\n                </button>\r\n                <button *ngIf=\"!showSpinner\" type=\"submit\" class=\"btn btn-primary text-center\"\r\n                    (click)=\"saveSettings()\">Save</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"card-body\" *ngIf=\"selectedTab===3\">\r\n        <div class=\"ml-3\">\r\n            <div class=\"row custom-wrapper\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"group-gap\">\r\n                        <!-- Upload image -->\r\n                        <div class=\"avatar-upload\">\r\n                            <div class=\"avatar-edit\">\r\n                                <input class=\"content-display-none\" type='file' id=\"imageUpload\"\r\n                                    accept=\".png, .jpg, .jpeg\" #fileInput (change)=\"uploadFile($event)\" />\r\n                            </div>\r\n                            <div class=\"img-picture\">\r\n                                <div class=\"img-preview\" id=\"imagePreview\"\r\n                                    [style.backgroundImage]=\"'url('+ imageUrl +')'\">\r\n                                </div>\r\n                            </div>\r\n                            <h4 class=\"card-title text-capitalize\">{{fullName}}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- <h5 class=\"card-title text-capitalize\">{{userName}} : Change password</h5> -->\r\n        <form [formGroup]=\"changePasswordForm\" novalidate>\r\n            <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"oldPassword\">Old Password:</label>\r\n                        <input type=\"text\" formControlName=\"oldPassword\" [(ngModel)]=\"changePasswordDetails.oldPassword\"\r\n                            class=\"form-control\" id=\"oldPassword\" placeholder=\"Old Password\" name=\"oldPassword\"\r\n                            [ngClass]=\"{ 'is-invalid': changePasswordSubmitted && changePasswordFormControl.oldPassword.errors }\">\r\n                        <div *ngIf=\"changePasswordSubmitted && changePasswordFormControl.oldPassword.errors\"\r\n                            class=\"invalid-feedback\">\r\n                            <div *ngIf=\"changePasswordFormControl.oldPassword.errors.required\">Old Password is required\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"fullname\">Full Name(Display Name):</label>\r\n                        <input type=\"text\" formControlName=\"fullName\" [(ngModel)]=\"fullName\" class=\"form-control\"\r\n                            id=\"fullName\" placeholder=\"Full Name\" name=\"fullName\">\r\n                    </div>\r\n                    <div class=\"col-sm-4 form-group\">\r\n                        <label for=\"userRole\">User Role:</label>\r\n                        <input type=\"text\" formControlName=\"roleName\" [(ngModel)]=\"roleName\" class=\"form-control\"\r\n                            id=\"roleName\" placeholder=\"User Name\" name=\"roleName\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <label for=\"email\">New Password:</label>\r\n                        <input type=\"password\" formControlName=\"newPassword\"\r\n                            [(ngModel)]=\"changePasswordDetails.newPassword\" class=\"form-control\"\r\n                            placeholder=\"New password\" name=\"newPassword\"\r\n                            [ngClass]=\"{ 'is-invalid': changePasswordSubmitted && changePasswordFormControl.newPassword.errors }\">\r\n                        <div *ngIf=\"changePasswordSubmitted && changePasswordFormControl.newPassword.errors\"\r\n                            class=\"invalid-feedback\">\r\n                            <div *ngIf=\"changePasswordFormControl.newPassword.errors.required\">New Password is required\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-sm-4\">\r\n                        <label for=\"ConfirmPassword\">Confirm Password:</label>\r\n                        <input type=\"password\" formControlName=\"confirmPassword\"\r\n                            [(ngModel)]=\"changePasswordDetails.confirmPassword\" class=\"form-control\"\r\n                            placeholder=\"Confirm password\" name=\"confirmPassword\"\r\n                            [ngClass]=\"{ 'is-invalid': changePasswordSubmitted && changePasswordFormControl.confirmPassword.errors }\">\r\n                        <div *ngIf=\"changePasswordSubmitted && changePasswordFormControl.confirmPassword.errors\"\r\n                            class=\"invalid-feedback\">\r\n                            <div *ngIf=\"changePasswordFormControl.confirmPassword.errors.required\">Confirm password is\r\n                                required</div>\r\n                            <div *ngIf=\"changePasswordFormControl.confirmPassword.errors.mustMatchPassword\">Passwords\r\n                                must match</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br>\r\n            </div>\r\n\r\n            <!-- Modal footer -->\r\n            <div class=\"modal-footer\">\r\n                <button *ngIf=\"showSpinner\" class=\"btn btn-primary text-center\" type=\"button\" [disabled]=\"showSpinner\">\r\n                    <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    Change Password\r\n                </button>\r\n                <button *ngIf=\"!showSpinner\" type=\"submit\" class=\"btn btn-primary text-center\"\r\n                    (click)=\"changePassword()\">Change Password</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.css']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>forget-password works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>logout works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IRolesInputData } from 'src/app/interfaces/RolesInterface';\r\nimport { UserRoleType, UserRoleTypeName } from 'src/app/shared/userroleenum';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { LoginUtilityService } from 'src/app/shared/services/loginutilityservice';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user-service';\r\nimport { UserDetails } from 'src/app/interfaces/UserDetails';\r\n\r\n@Component({\r\n  selector: 'app-manage-roles',\r\n  templateUrl: './manage-roles.component.html',\r\n  styleUrls: ['./manage-roles.component.css']\r\n})\r\nexport class ManageRolesComponent implements OnInit {\r\n  subscriptions: Subscription;\r\n  showSpinner = false;\r\n\r\n  roleTab: number = 1;\r\n  showRegistration = false;\r\n  roleInputData: IRolesInputData = {};\r\n  createdByRole: number;\r\n\r\n  superAdminList: Array<UserDetails>;\r\n  adminList: Array<UserDetails>;\r\n  managerList: Array<UserDetails>;\r\n  userList: Array<UserDetails>;\r\n\r\n  columnDefs: any;\r\n\r\n  roleDefinitions = {\r\n    1: 'Super Admin',\r\n    2: 'Admin',\r\n    3: 'Manager',\r\n    4: 'User'\r\n  };\r\n\r\n  accountStatusDefinitions = {\r\n    1: 'ACTIVE',\r\n    2: 'INACTIVE',\r\n    3: 'LOCKED',\r\n    4: 'DELETED'\r\n  }\r\n\r\n\r\n  constructor(\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _loginUtilityService: LoginUtilityService,\r\n    private _userService: UserService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.columnDefs = ['USERID', 'FULL NAME', 'USER NAME', 'EMAIL', 'PHONE NUMBER', 'ROLE', 'ACCOUNT STATUS'];\r\n    // this.createdByRole = +this._activatedRoute.snapshot.params['id'];\r\n    this.subscriptions =\r\n      this._loginUtilityService.getUserLoginData$().subscribe(userLoginData => {\r\n        if (userLoginData && userLoginData.userRole) {\r\n          debugger;\r\n          this.createdByRole = userLoginData.userRole;\r\n          this.roleTab = userLoginData.userRole;\r\n          this.getAllUsersOnRole(this.roleTab);\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllUsersOnRole(role: number) {\r\n    this.showSpinner = true;\r\n    this._userService.getAllUsersOnRole(role).subscribe(\r\n      data => {\r\n        debugger;\r\n        console.log(data);\r\n        if (role === UserRoleType.SUPERADMIN) {\r\n          this.superAdminList = data;\r\n        } else if (role === UserRoleType.ADMIN) {\r\n          this.adminList = data;\r\n        } else if (role === UserRoleType.MANAGER) {\r\n          this.managerList = data;\r\n        } else {\r\n          this.userList = data;\r\n        }\r\n        this.showSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  selectRole(role: number) {\r\n    this, this.roleTab = role;\r\n    if ((this.superAdminList ===undefined || this.superAdminList.length === 0) && role === UserRoleType.SUPERADMIN) {\r\n      this.getAllUsersOnRole(this.roleTab);\r\n    } else if ((this.adminList === undefined || this.adminList.length === 0) && role === UserRoleType.ADMIN) {\r\n      this.getAllUsersOnRole(this.roleTab);\r\n    } else if ((this.managerList === undefined || this.managerList.length === 0) && role === UserRoleType.MANAGER) {\r\n      this.getAllUsersOnRole(this.roleTab);\r\n    } else {\r\n      if (this.userList === undefined || this.userList.length === 0)\r\n        this.getAllUsersOnRole(this.roleTab);\r\n    }\r\n    debugger;\r\n  }\r\n\r\n  register(role: number) {\r\n    this.roleInputData.createdByRole = this.createdByRole;\r\n    this.roleInputData.createRole = role;\r\n    if (role === UserRoleType.SUPERADMIN) {\r\n      this.roleInputData.roleName = UserRoleTypeName.SUPERADMIN;\r\n    } else if (role === UserRoleType.ADMIN) {\r\n      this.roleInputData.roleName = UserRoleTypeName.ADMIN;\r\n    } else if (role === UserRoleType.MANAGER) {\r\n      this.roleInputData.roleName = UserRoleTypeName.MANAGER;\r\n    } else {\r\n      this.roleInputData.roleName = UserRoleTypeName.USER;\r\n    }\r\n    this.showRegistration = true;\r\n  }\r\n  \r\n  updateUserTable(role: number) {\r\n      this.getAllUsersOnRole(role);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    <ul class=\"nav nav-tabs card-header-tabs\">\r\n      <li *ngIf=\"createdByRole === 1\" class=\"nav-item\">\r\n        <a class=\"nav-link\" [class.active]=\"createdByRole === 1\" data-toggle=\"tab\" (click)=\"selectRole(1)\">Super Admin</a>\r\n      </li>\r\n      <li *ngIf=\"createdByRole === 1 || createdByRole === 2\" class=\"nav-item\">\r\n        <a class=\"nav-link\" [class.active]=\"createdByRole === 2\" data-toggle=\"tab\" (click)=\"selectRole(2)\">Admin</a>\r\n      </li>\r\n      <li *ngIf=\"createdByRole === 1 || createdByRole === 2 || createdByRole === 3\"  class=\"nav-item\">\r\n        <a class=\"nav-link\" [class.active]=\"createdByRole === 3\" data-toggle=\"tab\" (click)=\"selectRole(3)\">Manager</a>\r\n      </li>\r\n      <li *ngIf=\"createdByRole === 1 || createdByRole === 2 || createdByRole === 3\"  class=\"nav-item\">\r\n        <a class=\"nav-link\" data-toggle=\"tab\" (click)=\"selectRole(4)\">User</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div *ngIf=\"roleTab === 1\" class=\"card-body\">\r\n    <h5 class=\"card-title\">Super Admin</h5>\r\n    <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n    <button data-toggle=\"modal\" class=\"btn btn-primary\" (click)=\"register(1)\" href=\"#myModal\">Create New Super Admin</button>\r\n    <br>\r\n    <app-managerole-superadmin [superAdminList]=\"superAdminList\" [columnDefs]=\"columnDefs\" [roleDefinitions]=\"roleDefinitions\"\r\n      [accountStatusDefinitions]=\"accountStatusDefinitions\"></app-managerole-superadmin>\r\n    <div *ngIf=\"showRegistration\">\r\n      <app-registrationform [registerInputData]=\"roleInputData\" (updateUserTable)=\"updateUserTable($event)\">\r\n      </app-registrationform>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"roleTab === 2\" class=\"card-body\">\r\n    <h5 class=\"card-title\">Admin</h5>\r\n    <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n    <button *ngIf=\"createdByRole === 1\" data-toggle=\"modal\" class=\"btn btn-primary\" (click)=\"register(2)\" href=\"#myModal\">Create New Admin</button>\r\n    <br>\r\n    <app-managerole-admin [adminList]=\"adminList\" [columnDefs]=\"columnDefs\" [roleDefinitions]=\"roleDefinitions\"\r\n      [accountStatusDefinitions]=\"accountStatusDefinitions\"></app-managerole-admin>\r\n    <div *ngIf=\"showRegistration\">\r\n      <app-registrationform [registerInputData]=\"roleInputData\" (updateUserTable)=\"updateUserTable($event)\">\r\n      </app-registrationform>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"roleTab === 3\" class=\"card-body\">\r\n    <h5 class=\"card-title\">Manager</h5>\r\n    <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n    <button *ngIf=\"createdByRole === 1 || createdByRole === 2\" data-toggle=\"modal\" class=\"btn btn-primary\" (click)=\"register(3)\" href=\"#myModal\">Create Manager</button>\r\n    <br>\r\n    <app-managerole-manager [managerList]=\"managerList\" [columnDefs]=\"columnDefs\" [roleDefinitions]=\"roleDefinitions\"\r\n      [accountStatusDefinitions]=\"accountStatusDefinitions\"></app-managerole-manager>\r\n    <div *ngIf=\"showRegistration\">\r\n      <app-registrationform [registerInputData]=\"roleInputData\" (updateUserTable)=\"updateUserTable($event)\">\r\n      </app-registrationform>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"roleTab === 4\" class=\"card-body\">\r\n    <h5 class=\"card-title\">User</h5>\r\n    <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n    <button *ngIf=\"createdByRole === 1 || createdByRole === 2 || createdByRole === 3\" data-toggle=\"modal\" class=\"btn btn-primary\" (click)=\"register(4)\" href=\"#myModal\">Create New User</button>\r\n    <br>\r\n    <app-managerole-user [userList]=\"userList\" [columnDefs]=\"columnDefs\" [roleDefinitions]=\"roleDefinitions\"\r\n      [accountStatusDefinitions]=\"accountStatusDefinitions\"></app-managerole-user>\r\n    <div *ngIf=\"showRegistration\">\r\n      <app-registrationform [registerInputData]=\"roleInputData\" (updateUserTable)=\"updateUserTable($event)\">\r\n      </app-registrationform>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { UserDetails } from 'src/app/interfaces/UserDetails';\r\n\r\n@Component({\r\n  selector: 'app-managerole-admin',\r\n  templateUrl: './managerole-admin.component.html',\r\n  styleUrls: ['./managerole-admin.component.css']\r\n})\r\nexport class ManageroleAdminComponent implements OnInit {\r\n  @Input() adminList: Array<UserDetails>;\r\n  @Input() columnDefs: any;\r\n  @Input() roleDefinitions: any;\r\n  @Input() accountStatusDefinitions: any\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"table-responsive mt-3\">\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"thead-light\">\r\n        <tr>\r\n          <th *ngFor=\"let column of columnDefs\">{{column}}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of adminList\">\r\n          <td>{{user.uid}}</td>\r\n          <td>{{user.fullName}}</td>\r\n          <td>{{user.userName}}</td>\r\n          <td>{{user.email}}</td>\r\n          <td>{{user.phoneNumber}}</td>\r\n          <td>{{roleDefinitions[user.userRole] | uppercase}}</td>\r\n          <td>{{accountStatusDefinitions[user.accountStatus]}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { UserDetails } from 'src/app/interfaces/UserDetails';\r\n\r\n@Component({\r\n  selector: 'app-managerole-manager',\r\n  templateUrl: './managerole-manager.component.html',\r\n  styleUrls: ['./managerole-manager.component.css']\r\n})\r\nexport class ManageroleManagerComponent implements OnInit {\r\n  @Input() managerList: Array<UserDetails>;\r\n  @Input() columnDefs: any;\r\n  @Input() roleDefinitions: any;\r\n  @Input() accountStatusDefinitions: any\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"table-responsive mt-3\">\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"thead-light\">\r\n        <tr>\r\n          <th *ngFor=\"let column of columnDefs\">{{column}}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of managerList\">\r\n          <td>{{user.uid}}</td>\r\n          <td>{{user.fullName}}</td>\r\n          <td>{{user.userName}}</td>\r\n          <td>{{user.email}}</td>\r\n          <td>{{user.phoneNumber}}</td>\r\n          <td>{{roleDefinitions[user.userRole] | uppercase}}</td>\r\n          <td>{{accountStatusDefinitions[user.accountStatus]}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { UserDetails } from 'src/app/interfaces/UserDetails';\r\n\r\n@Component({\r\n  selector: 'app-managerole-superadmin',\r\n  templateUrl: './managerole-superadmin.component.html',\r\n  styleUrls: ['./managerole-superadmin.component.css']\r\n})\r\nexport class ManageroleSuperadminComponent implements OnInit {\r\n  @Input() superAdminList: Array<UserDetails>;\r\n  @Input() columnDefs: any;\r\n  @Input() roleDefinitions: any;\r\n  @Input() accountStatusDefinitions: any\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"table-responsive mt-3\">\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"thead-light\">\r\n        <tr>\r\n          <th *ngFor=\"let column of columnDefs\">{{column}}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of superAdminList\">\r\n          <td>{{user.uid}}</td>\r\n          <td>{{user.fullName}}</td>\r\n          <td>{{user.userName}}</td>\r\n          <td>{{user.email}}</td>\r\n          <td>{{user.phoneNumber}}</td>\r\n          <td>{{roleDefinitions[user.userRole] | uppercase}}</td>\r\n          <td>{{accountStatusDefinitions[user.accountStatus]}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { UserDetails } from 'src/app/interfaces/UserDetails';\r\n\r\n@Component({\r\n  selector: 'app-managerole-user',\r\n  templateUrl: './managerole-user.component.html',\r\n  styleUrls: ['./managerole-user.component.css']\r\n})\r\nexport class ManageroleUserComponent implements OnInit {\r\n  @Input() userList: Array<UserDetails>;\r\n  @Input() columnDefs: any;\r\n  @Input() roleDefinitions: any;\r\n  @Input() accountStatusDefinitions: any\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"table-responsive mt-3\">\r\n    <table class=\"table table-bordered\">\r\n      <thead class=\"thead-light\">\r\n        <tr>\r\n          <th *ngFor=\"let column of columnDefs\">{{column}}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of userList\">\r\n          <td>{{user.uid}}</td>\r\n          <td>{{user.fullName}}</td>\r\n          <td>{{user.userName}}</td>\r\n          <td>{{user.email}}</td>\r\n          <td>{{user.phoneNumber}}</td>\r\n          <td>{{roleDefinitions[user.userRole] | uppercase}}</td>\r\n          <td>{{accountStatusDefinitions[user.accountStatus]}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>","import { Component, OnInit, Input, AfterContentChecked, AfterViewChecked, AfterViewInit, ChangeDetectorRef, DoCheck, OnDestroy } from '@angular/core';\r\nimport { IRolesInputData } from 'src/app/interfaces/RolesInterface';\r\nimport { UserRoleType, UserRoleTypeName } from 'src/app/shared/userroleenum';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Project353Routes } from 'src/app/app.component.routes';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\nimport { LoginUtilityService } from 'src/app/shared/services/loginutilityservice';\r\n\r\n@Component({\r\n  selector: 'app-myaccount',\r\n  templateUrl: './myaccount.component.html',\r\n  styleUrls: ['./myaccount.component.css']\r\n})\r\nexport class MyaccountComponent implements OnInit, AfterContentChecked,AfterViewInit, OnDestroy {\r\n  subscriptions: Subscription;\r\n\r\n  accountSelectedTabIndex: number\r\n\r\n  tab: number = 1;\r\n  showRegistration = false;\r\n  roleInputData: IRolesInputData = {};\r\n  userId: number;\r\n  userRole: number;\r\n  userName: string;\r\n  fullName: string;\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _cdr: ChangeDetectorRef,\r\n    private _loginUtilityService: LoginUtilityService\r\n  ) {\r\n    this.accountSelectedTabIndex = +this._activatedRoute.snapshot.params['tab'];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.accountSelectedTabIndex = +this._activatedRoute.snapshot.params['tab'];\r\n    this.userId = +this._activatedRoute.snapshot.params['id'];\r\n    this.subscriptions =\r\n    this._loginUtilityService.getUserLoginData$().subscribe(userLoginData => {\r\n      if (userLoginData && userLoginData.userRole) {\r\n        debugger;\r\n        this.userRole = userLoginData.userRole;\r\n        this.userName = userLoginData.userName;\r\n        this.fullName = userLoginData.fullName;\r\n      }\r\n    });\r\n    if (this.accountSelectedTabIndex === 1) {\r\n      document.getElementById(\"settings\").click();\r\n    } else if (this.accountSelectedTabIndex = 2) {\r\n      document.getElementById(\"help\").click();\r\n    }\r\n    this._cdr.detectChanges();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.accountSelectedTabIndex = +this._activatedRoute.snapshot.params['tab'];\r\n    // if (this.accountSelectedTabIndex === 1) {\r\n    //   document.getElementById(\"settings\").click();\r\n    // } else if (this.accountSelectedTabIndex = 2) {\r\n    //   document.getElementById(\"help\").click();\r\n    // }\r\n    this._cdr.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n        this._cdr.detectChanges();\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    // this.accountSelectedTabIndex = +this._activatedRoute.snapshot.params['tab'];\r\n    // if (this.accountSelectedTabIndex === 1) {\r\n    //   document.getElementById(\"settings\").click();\r\n    // } else if (this.accountSelectedTabIndex = 2) {\r\n    //   document.getElementById(\"help\").click();\r\n    // }\r\n    this._cdr.detectChanges();\r\n  }\r\n\r\n  selectTab(tabIndex: number) {\r\n    this.accountSelectedTabIndex = tabIndex;\r\n    if (tabIndex === 1) {\r\n      // this.navigateToSettings(tabIndex);\r\n    } else if (tabIndex === 2) {\r\n      // this.navigateToHelpAndSupport(tabIndex);\r\n    }\r\n  }\r\n\r\n  navigateToSettings(tab: number) {\r\n    //this._router.navigate(['../../../' + tab + '/' + 'settings'], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  navigateToHelpAndSupport(tab: number) {\r\n    //this._router.navigate(['../../../' + tab + '/' + 'helpandsupport'], { relativeTo: this._activatedRoute });\r\n  }\r\n\r\n  register(role: number) {\r\n    this.roleInputData.createRole = role;\r\n    if (role === UserRoleType.SUPERADMIN) {\r\n      this.roleInputData.roleName = UserRoleTypeName.SUPERADMIN;\r\n    } else if (role === UserRoleType.ADMIN) {\r\n      this.roleInputData.roleName = UserRoleTypeName.ADMIN;\r\n    } else if (role === UserRoleType.MANAGER) {\r\n      this.roleInputData.roleName = UserRoleTypeName.MANAGER;\r\n    } else {\r\n      this.roleInputData.roleName = UserRoleTypeName.USER;\r\n    }\r\n    this.showRegistration = true;\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <ul class=\"nav nav-tabs card-header-tabs\">\r\n        <li class=\"nav-item\">\r\n          <a id=\"settings\" class=\"nav-link\" [class.active]=\"accountSelectedTabIndex===1\" data-toggle=\"tab\" (click)=\"selectTab(1)\">Settings</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a id=\"help\" class=\"nav-link\" [class.active]=\"accountSelectedTabIndex===2\" data-toggle=\"tab\" (click)=\"selectTab(2)\">Help & Support</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link disabled active\" data-toggle=\"tab\" (click)=\"selectTab(3)\">FAQ's</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"card-body\" *ngIf=\"accountSelectedTabIndex===1\">\r\n      <h3 class=\"card-title text-uppercase\">{{fullName}}({{userName}})</h3>\r\n      <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n      <button data-toggle=\"modal\" class=\"btn btn-primary\" (click)=\"register(2)\">Settings</button>\r\n      <app-settings></app-settings>\r\n    </div>\r\n    <div *ngIf=\"accountSelectedTabIndex===2\" class=\"card-body\">\r\n      <h5 class=\"card-title\">{{fullName}}({{userName}})</h5>\r\n      <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n      <button data-toggle=\"modal\" class=\"btn btn-primary\" (click)=\"register(3)\">Help & Support</button>\r\n      <app-helpandsupport></app-helpandsupport>\r\n    </div>\r\n    <div *ngIf=\"accountSelectedTabIndex===3\" class=\"card-body\">\r\n      <h3 class=\"card-title\">{{fullName}}({{userName}})</h3>\r\n      <p class=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\r\n      <button data-toggle=\"modal\" class=\"btn btn-primary\" (click)=\"register(4)\" href=\"#myModal\">FAQ's</button>\r\n      <app-faq></app-faq>\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserInfo, UserDetails } from 'src/app/interfaces/User';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { UserService } from 'src/app/services/user-service';\r\nimport { UserSignupDetails } from 'src/app/interfaces/UserDetails';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LoginService } from 'src/app/services/login-service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MustMatchPassword } from 'src/app/helpers/must-match-password';\r\nimport { UserNameValidation } from 'src/app/helpers/username-validation';\r\nimport { ResetPasswordDetails } from 'src/app/interfaces/ResetPasswordDetails';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserRoleType, UserRoleTypeName } from 'src/app/shared/userroleenum';\r\nimport { Project353Routes } from 'src/app/app.component.routes';\r\nimport { LoginUtilityService } from 'src/app/shared/services/loginutilityservice';\r\n\r\n@Component({\r\n  selector: 'app-mylogin',\r\n  templateUrl: './mylogin.component.html',\r\n  styleUrls: ['./mylogin.component.css']\r\n})\r\nexport class MyloginComponent implements OnInit {\r\n  showSpinner = false;\r\n\r\n  user: UserInfo = {};\r\n  userDetails: UserDetails = {}\r\n  userSignupDetails: UserSignupDetails = {};\r\n  resetPasswordDetails: ResetPasswordDetails = {};\r\n\r\n  registerForm: FormGroup;\r\n  registerUserSubmitted = false;\r\n\r\n  loginForm: FormGroup;\r\n  loginSubmitted = false;\r\n  acceptTerms = false;\r\n\r\n  resetPasswordForm: FormGroup;\r\n  resetPasswordSubmitted = false;\r\n\r\n  constructor(\r\n    private _userService: UserService, private _loginService: LoginService,\r\n    private toastr: ToastrService, private formBuilder: FormBuilder,\r\n    private formBuilderLogin: FormBuilder, private _router: Router,\r\n    private _activatedRoute: ActivatedRoute,\r\n    private _loginUtilityService: LoginUtilityService\r\n  ) {\r\n    this.createRegisterForm();\r\n    this.createLoginForm();\r\n    this.createResetPasswordForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n    // setTimeout(() => this.toastr.success('New', 'dfg', { timeOut: 10000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n  }\r\n  signupModalPopUp() {\r\n    this.userSignupDetails = {};\r\n    this.registerUserSubmitted = false;\r\n  }\r\n  resetPasswordModalPopUp() {\r\n    this.resetPasswordDetails = {};\r\n    this.resetPasswordSubmitted = false;\r\n  }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.formBuilder.group({\r\n      userName: ['', [Validators.required, UserNameValidation]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n      phoneNumber: ['', [Validators.required, Validators.minLength(10)]],\r\n      confirmPassword: ['', Validators.required],\r\n      agreeTerms: ['', Validators.required]\r\n    }, {\r\n      validator: MustMatchPassword('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  createLoginForm() {\r\n    this.loginForm = this.formBuilderLogin.group({\r\n      userName: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    })\r\n  }\r\n\r\n  createResetPasswordForm() {\r\n    this.resetPasswordForm = this.formBuilderLogin.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n    })\r\n  }\r\n\r\n  resetPassword() {\r\n    this.resetPasswordSubmitted = true;\r\n    this.showSpinner = true;\r\n    if (this.resetPasswordForm.invalid) {\r\n      setTimeout(() => this.toastr.warning('Please enter valid Registered Email Address', 'Alert', { timeOut: 3000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n      this.showSpinner = false;\r\n      return;\r\n    }\r\n    this._loginService.resetUserLogin(this.resetPasswordDetails).subscribe(\r\n      data => {\r\n        if (data !== null && data.success) {\r\n          console.log(data);\r\n          console.log(\"Success\");\r\n          setTimeout(() => this.toastr.success('Your password has reseted Successful, New password sent to - ' + data.email, 'Reset Password', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n          document.getElementById(\"forget-password-close\").click();\r\n          this.clearData();\r\n          this.createRegisterForm();\r\n          this.loginForm.reset();\r\n          this.createResetPasswordForm();\r\n          this.showSpinner = false;\r\n        } else {\r\n          console.log('Failed');\r\n          this.showSpinner = false;\r\n          setTimeout(() => this.toastr.error('Password reset Failed - ' + data.message, 'Reset Password', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n        }\r\n      }, (error: any) => {\r\n        console.log('Failed');\r\n        this.showSpinner = false;\r\n        setTimeout(() => this.toastr.error('Password reset Failed - unknown error', 'Signup', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n      }\r\n    )\r\n  }\r\n\r\n  login() {\r\n    this.loginSubmitted = true;\r\n    this.showSpinner = true;\r\n    if (this.loginForm.invalid) {\r\n      this.showSpinner = false;\r\n      return;\r\n    }\r\n    this._loginService.authenticateUserLogin(this.user).subscribe(\r\n      data => {\r\n        this.userDetails = data;\r\n        console.log(data)\r\n        this.showSpinner = false;\r\n        if (data.accountStatus === 3) {\r\n          setTimeout(() => this.toastr.error(data.errors[0].errorMessage, 'Account Locked', { timeOut: 10000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n        } else if (data.status === true && data.accountStatus === 1) {\r\n          this._loginUtilityService.setUserLoginData(this.userDetails);\r\n          setTimeout(() => this.toastr.success('Login Successful - Welcome ' + data.userName, 'Login', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n          if (this.userDetails.userRole === UserRoleType.USER) {\r\n            this._router.navigate(['../' + Project353Routes.myhomeview + '/' + this.userDetails.uid], { relativeTo: this._activatedRoute });\r\n          } else if (this.userDetails.userRole === UserRoleType.SUPERADMIN ||\r\n            this.userDetails.userRole === UserRoleType.ADMIN || this.userDetails.userRole === UserRoleType.MANAGER) {\r\n            this._router.navigate(['../' + Project353Routes.mybusiness + '/' + this.userDetails.uid + '/' + Project353Routes.manageroles], { relativeTo: this._activatedRoute });\r\n          }\r\n        } else if (data.status === false && (data.accountStatus === 1) || data.accountStatus === 0) {\r\n          setTimeout(() => this.toastr.error(data.errors[0].errorMessage, 'Invalid', { timeOut: 10000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(error);\r\n        this.showSpinner = false;\r\n        setTimeout(() => this.toastr.error('Login Failed', 'Login', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n      }\r\n    );\r\n  }\r\n\r\n  get registerFormControl() { return this.registerForm.controls; }\r\n\r\n  get loginFormControl() { return this.loginForm.controls; }\r\n\r\n  get resetFormControl() { return this.resetPasswordForm.controls; }\r\n\r\n  registerUser() {\r\n    this.registerUserSubmitted = true;\r\n    this.showSpinner = true;\r\n    if (this.registerForm.invalid) {\r\n      setTimeout(() => this.toastr.warning('You must fill all the Required fields', 'Alert', { timeOut: 3000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n      this.showSpinner = false;\r\n      return;\r\n    }\r\n    if (!this.acceptTerms) {\r\n      this.showSpinner = false;\r\n      setTimeout(() => this.toastr.warning('You must accept Terms & Conditions', 'Alert', { timeOut: 3000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n      return;\r\n    }\r\n    this.userSignupDetails.createdBy = UserRoleType.USER;\r\n    this.userSignupDetails.role = UserRoleType.USER;\r\n    // this.userSignupDetails.roleName = UserRoleTypeName.USER;\r\n    this._userService.saveUser(this.userSignupDetails).subscribe(\r\n      data => {\r\n        this.user = data;\r\n        if (this.user.errors === null) {\r\n          this.showSpinner = false;\r\n          setTimeout(() => this.toastr.success('Registration Successful', 'Signup', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n          document.getElementById(\"signup-close\").click();\r\n          this.clearData();\r\n        } else {\r\n          this.showSpinner = false;\r\n          this.toastr.error(this.user.errors[0].errorMessage)\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(error);\r\n        this.showSpinner = false;\r\n        setTimeout(() => this.toastr.error('Registration Failed - unknown error', 'Signup', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n      }\r\n    )\r\n  }\r\n\r\n  private clearData() {\r\n    this.user = {};\r\n    this.userSignupDetails = {};\r\n    this.resetPasswordDetails = {};\r\n  }\r\n\r\n  close() {\r\n    this.loginForm.reset();\r\n    // this.createLoginForm();\r\n    // this.createRegisterForm();\r\n    // this.createResetPasswordForm();\r\n  }\r\n\r\n  getUser() {\r\n    this.showSpinner = true;\r\n    let a = this._userService.getUsers().subscribe(\r\n      data => {\r\n        console.log(data)\r\n        this.showSpinner = false;\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\" class=\"login-top-margin\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-8\">\r\n      <div class=\"card card-data-height\">\r\n        <div class=\"card-header card bg-info text-white text-center\">Coming up features</div>\r\n        <div class=\"card-body\">\r\n\r\n          <body data-spy=\"scroll\" class=\"scroll-height\" data-target=\"#myScrollspy\" data-offset=\"1\">\r\n\r\n            <div class=\"container-fluid data-cls\">\r\n              <div class=\"row\">\r\n                <nav class=\"col-sm-3 col-4\" id=\"myScrollspy\">\r\n                  <ul class=\"nav nav-pills flex-column\">\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link active\" href=\"#section1\">Section 1</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link\" href=\"#section2\">Section 2</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                      <a class=\"nav-link\" href=\"#section3\">Section 3</a>\r\n                    </li>\r\n                    <li class=\"nav-item dropdown\">\r\n                      <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Section 4</a>\r\n                      <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item\" href=\"#section41\">Link 1</a>\r\n                        <a class=\"dropdown-item\" href=\"#section42\">Link 2</a>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </nav>\r\n                <div class=\"col-sm-9 col-8 content-data\">\r\n                  <div id=\"section1\" class=\"bg-success content-data\">\r\n                    <h5>Section 1</h5>\r\n                    <p>Try to scroll this section and look at the navigation list while scrolling!</p>\r\n                  </div>\r\n                  <div id=\"section2\" class=\"bg-warning content-data\">\r\n                    <h5>Section 2</h5>\r\n                    <p>Try to scroll this section and look at the navigation list while scrolling!</p>\r\n                  </div>\r\n                  <div id=\"section3\" class=\"bg-secondary content-data\">\r\n                    <h5>Section 3</h5>\r\n                    <p>Try to scroll this section and look at the navigation list while scrolling!</p>\r\n                  </div>\r\n                  <div id=\"section41\" class=\"bg-danger content-data\">\r\n                    <h5>Section 4-1</h5>\r\n                    <p>Try to scroll this section and look at the navigation list while scrolling!</p>\r\n                  </div>\r\n                  <div id=\"section42\" class=\"bg-info content-data\">\r\n                    <h5>Section 4-2</h5>\r\n                    <p>Try to scroll this section and look at the navigation list while scrolling!</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </body>\r\n\r\n        </div>\r\n        <div class=\"card-footer text-center\">\r\n          <div class=\"row\">\r\n            <div class=\"col-sm-8 text-right\">\r\n              <div class=\"form-check\">\r\n                <label class=\"form-check-label\">\r\n                  <input type=\"checkbox\" class=\"form-check-input\" value=\"\">I accept the Terms & Conditions\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header card bg-info text-white text-center\">Already Member Sign In Here</div>\r\n        <div class=\"card-body\">\r\n          <form [formGroup]=\"loginForm\" novalidate>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-4\">\r\n                <label for=\"email\">User Name:</label>\r\n              </div>\r\n              <div class=\"col-sm-8\">\r\n                <input formControlName=\"userName\" type=\"text\" [(ngModel)]=\"user.userName\" class=\"form-control\" id=\"unn\"\r\n                  placeholder=\"User Name / Email\" name=\"email\"\r\n                  [ngClass]=\"{ 'is-invalid': loginSubmitted && loginFormControl.userName.errors }\">\r\n                <div *ngIf=\"loginSubmitted && loginFormControl.userName.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"loginFormControl.userName.errors.required\">User Name is required</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <br>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-4\">\r\n                <label for=\"email\">Password:</label>\r\n              </div>\r\n              <div class=\"col-sm-8\">\r\n                <input type=\"password\" formControlName=\"password\" [(ngModel)]=\"user.password\" class=\"form-control\"\r\n                  placeholder=\"Enter password\" name=\"pswd\"\r\n                  [ngClass]=\"{ 'is-invalid': loginSubmitted && loginFormControl.password.errors }\">\r\n                <div *ngIf=\"loginSubmitted && loginFormControl.password.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"loginFormControl.password.errors.required\">Password is required</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br>\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-8\">\r\n                <a data-toggle=\"modal\" (click)=\"resetPasswordModalPopUp()\" class=\"forgetPwd-link\"\r\n                  href=\"#forgerPasswordModal\">Forget password? Reset it here</a>\r\n              </div>\r\n              <div class=\"col-sm-4 text-right\">\r\n                <button *ngIf=\"showSpinner\" class=\"btn btn-primary text-center\" type=\"button\" [disabled]=\"showSpinner\">\r\n                  <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                  Sign In\r\n                </button>\r\n                <button *ngIf=\"!showSpinner\" type=\"submit\" class=\"btn btn-primary text-center\" (click)=\"login()\">Sign\r\n                  In</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div class=\"card-footer text-center\">\r\n          <a data-toggle=\"modal\" (click)=\"signupModalPopUp()\" href=\"#myModal\">Not a Member? <strong>Signup\r\n              Here</strong></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <app-imgcaurousel></app-imgcaurousel>\r\n  <br>\r\n  <!-- <body data-spy=\"scroll\" data-target=\"#myScrollspy\" data-offset=\"1\">\r\n    <div class=\"row\">\r\n      <nav class=\"col-sm-3 col-4\" id=\"myScrollspy\">\r\n        <ul class=\"nav nav-pills flex-column\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" href=\"#section1\">Section 1</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#section2\">Section 2</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#section3\">Section 3</a>\r\n          </li>\r\n          <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Section 4</a>\r\n            <div class=\"dropdown-menu\">\r\n              <a class=\"dropdown-item\" href=\"#section41\">Link 1</a>\r\n              <a class=\"dropdown-item\" href=\"#section42\">Link 2</a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <div class=\"col-sm-9 col-8\">\r\n        <div id=\"section1\" class=\"bg-success\">    \r\n          <h1>Section 1</h1>\r\n          <p>Try to scroll this section and look at the navigation list while scrolling!</p>\r\n        </div>\r\n        <div id=\"section2\" class=\"bg-warning\"> \r\n          <h1>Section 2</h1>\r\n          <p>Try to scroll this section and look at the navigation list while scrolling!</p>\r\n        </div>        \r\n        <div id=\"section3\" class=\"bg-secondary\">         \r\n          <h1>Section 3</h1>\r\n          <p>Try to scroll this section and look at the navigation list while scrolling!</p>\r\n        </div>\r\n        <div id=\"section41\" class=\"bg-danger\">         \r\n          <h1>Section 4-1</h1>\r\n          <p>Try to scroll this section and look at the navigation list while scrolling!</p>\r\n        </div>      \r\n        <div id=\"section42\" class=\"bg-info\">         \r\n          <h1>Section 4-2</h1>\r\n          <p>Try to scroll this section and look at the navigation list while scrolling!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </body> -->\r\n\r\n\r\n\r\n  <!-- The Modal -->\r\n  <div class=\"modal\" id=\"myModal\">\r\n    <div class=\"modal-dialog modal-lg modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n\r\n        <!-- Modal Header -->\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title text-center\">Signup</h4>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        </div>\r\n\r\n        <!-- Modal body -->\r\n        <form [formGroup]=\"registerForm\" novalidate>\r\n\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6 form-group\">\r\n                <label for=\"email\">User Name:</label>\r\n                <input type=\"text\" formControlName=\"userName\" [(ngModel)]=\"userSignupDetails.userName\"\r\n                  class=\"form-control\" id=\"userName\" placeholder=\"User Name\" name=\"usersignupemail1\"\r\n                  [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.userName.errors }\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.userName.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.userName.errors.required\">User Name is required</div>\r\n                  <div class=\"error-text\" *ngIf=\"registerForm.get('userName').hasError('userNameValidation')\">\r\n                    {{registerForm.get('userName').errors['userNameValidation']}}\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <label for=\"email\">Email:</label>\r\n                <input type=\"text\" formControlName=\"email\" [(ngModel)]=\"userSignupDetails.email\" class=\"form-control\"\r\n                  id=\"email\" maxlength=\"80\" placeholder=\"Email Address\" name=\"usersignupemail\"\r\n                  [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.email.errors }\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.email.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.email.errors.required\">Email is required</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <label for=\"email\">Password:</label>\r\n                <input type=\"password\" formControlName=\"password\" [(ngModel)]=\"userSignupDetails.password\"\r\n                  class=\"form-control\" placeholder=\"Enter password\" name=\"usersignuppswd\"\r\n                  [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.password.errors }\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.password.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.password.errors.required\">Password is required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <label for=\"phoneNumber\">Phone Number:</label>\r\n                <input type=\"number\" formControlName=\"phoneNumber\" [(ngModel)]=\"userSignupDetails.phoneNumber\"\r\n                  class=\"form-control\" placeholder=\"Phone Number\" name=\"usersignupphonenumber\"\r\n                  [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.phoneNumber.errors }\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.phoneNumber.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.phoneNumber.errors.required\">Phone Number is required</div>\r\n                  <div *ngIf=\"registerFormControl.phoneNumber.errors.minLenght\">Phone Number must be at least 10 digits\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <label for=\"ConfirmPassword\">Confirm Password:</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\" [(ngModel)]=\"userSignupDetails.confirmPassword\"\r\n                  class=\"form-control\" placeholder=\"Confirm password\" name=\"usersignupcnfpswd\"\r\n                  [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.confirmPassword.errors }\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.confirmPassword.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.confirmPassword.errors.required\">Confirm password is required</div>\r\n                  <div *ngIf=\"registerFormControl.confirmPassword.errors.mustMatchPassword\">Passwords must match</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <!-- Modal footer -->\r\n          <div class=\"modal-footer\">\r\n            <div class=\"col-sm-5 text-right\">\r\n              <div class=\"form-check\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.agreeTerms.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.agreeTerms.errors.required\">Email is required</div>\r\n                </div>\r\n                <label class=\"form-check-label\">\r\n                  <input formControlName=\"agreeTerms\" class=\"form-control\" type=\"checkbox\" class=\"form-check-input\"\r\n                    [(ngModel)]=\"acceptTerms\"\r\n                    [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.agreeTerms.errors }\">I\r\n                  accept the Terms & Conditions\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <button type=\"button\" id=\"signup-close\" class=\"btn btn-danger\" data-dismiss=\"modal\"\r\n              (click)=\"close()\">Close</button>\r\n\r\n            <button *ngIf=\"showSpinner\" class=\"btn btn-primary text-center\" type=\"button\" [disabled]=\"showSpinner\">\r\n              <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n              Signup\r\n            </button>\r\n            <button *ngIf=\"!showSpinner\" type=\"submit\" class=\"btn btn-primary text-center\"\r\n              (click)=\"registerUser()\">Signup</button>\r\n\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <!-- The Modal -->\r\n  <div class=\"modal\" id=\"forgerPasswordModal\">\r\n    <div class=\"modal-dialog modal-lg modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n\r\n        <!-- Modal Header -->\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title text-center\">Reset Password</h4>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        </div>\r\n\r\n        <!-- Modal body -->\r\n        <form [formGroup]=\"resetPasswordForm\" novalidate>\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <label for=\"email\">Enter Registered Email Address:</label>\r\n                <input type=\"text\" formControlName=\"email\" [(ngModel)]=\"resetPasswordDetails.email\" class=\"form-control\"\r\n                  id=\"forget-email\" placeholder=\"Registered Email Address\" name=\"usersignupemail\"\r\n                  [ngClass]=\"{ 'is-invalid': resetPasswordSubmitted && resetFormControl.email.errors }\">\r\n                <div *ngIf=\"resetPasswordSubmitted && resetFormControl.email.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"resetFormControl.email.errors.required\">Email is required</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br>\r\n\r\n          </div>\r\n\r\n          <!-- Modal footer -->\r\n          <div class=\"modal-footer\">\r\n            <div class=\"col-sm-8 text-right\">\r\n              <div class=\"form-check\">\r\n                <label class=\"form-check-label\">\r\n                  Password will be sent to Registered Email Address\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <button type=\"button\" id=\"forget-password-close\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n\r\n            <button *ngIf=\"showSpinner\" class=\"btn btn-primary text-center\" type=\"button\" [disabled]=\"showSpinner\">\r\n              <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n              Reset Password\r\n            </button>\r\n            <button *ngIf=\"!showSpinner\" type=\"submit\" class=\"btn btn-primary text-center\"\r\n              (click)=\"resetPassword()\">Reset Password</button>\r\n\r\n          </div>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n</div>","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ProjectPropertiesRequest, ProjectPropertiesResponse } from 'src/app/interfaces/ProjectProperties';\r\nimport { ProjectPropertiesService } from 'src/app/services/project-properties-service';\r\n\r\n@Component({\r\n  selector: 'app-projectproperties',\r\n  templateUrl: './projectproperties.component.html',\r\n  styleUrls: ['./projectproperties.component.css']\r\n})\r\nexport class ProjectpropertiesComponent implements OnInit {\r\n\r\n  projectPropertiesSubmitted = false\r\n  projectPropertiesForm: FormGroup;\r\n\r\n  projectPropertiesRequest: ProjectPropertiesRequest;\r\n  projectPropertiesResponse: ProjectPropertiesResponse;\r\n  showSpinner: boolean;\r\n\r\n\r\n  uploadImage = false;\r\n  @ViewChild('fileInput') el: ElementRef;\r\n  imageUrl: any ;\r\n  selectedType = '';\r\n\r\n  typeList = [\"text\", \"image\"]\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private _projectPropertiesService: ProjectPropertiesService,\r\n    private cd: ChangeDetectorRef,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projectPropertiesRequest = {};\r\n    this.createProjectPropertiesForm();\r\n  }\r\n\r\n  get projectPropertiesFormControl() { return this.projectPropertiesForm.controls; }\r\n\r\n  createProjectPropertiesForm() {\r\n    this.projectPropertiesForm = this.formBuilder.group({\r\n      propertyName: ['', Validators.required],\r\n      value: ['', Validators.required],\r\n      type: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  save() {\r\n    this.projectPropertiesSubmitted = true;\r\n    this.showSpinner = true;\r\n    if (this.projectPropertiesForm.invalid && (this.projectPropertiesRequest.type === undefined || this.projectPropertiesRequest.type === 'text') && this.projectPropertiesRequest.value.length === 0) {\r\n      setTimeout(() => this.toastr.warning('You must fill all the Required fields', 'Alert', { timeOut: 3000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n      this.showSpinner = false;\r\n      return;\r\n    }\r\n    if (this.projectPropertiesRequest.type === 'image' && !this.uploadImage) {\r\n      setTimeout(() => this.toastr.warning('No upload image found', 'Alert', { timeOut: 3000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n      this.showSpinner = false;\r\n      return;\r\n    }\r\n    debugger;\r\n    this._projectPropertiesService.saveProperties(this.projectPropertiesRequest).subscribe(\r\n      data => {\r\n        if (data !== null && data.status) {\r\n          debugger;\r\n          this.projectPropertiesResponse = data;\r\n          console.log(data);\r\n          console.log(\"Success\");\r\n          setTimeout(() => this.toastr.success('Property Saved Successfully', 'Project Properties', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n          this.projectPropertiesRequest = {};\r\n          this.showSpinner = false;\r\n          this.projectPropertiesSubmitted = false;\r\n        } else {\r\n          console.log('Failed');\r\n          this.showSpinner = false;\r\n          setTimeout(() => this.toastr.error('Property Saving Failed - ' + data.errors[0].errorMessage, 'Project Properties', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n        }\r\n      }, (error: any) => {\r\n        console.log('Failed');\r\n        this.showSpinner = false;\r\n        setTimeout(() => this.toastr.error('Property Saving Failed - unknown error', 'Project Properties', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n      }\r\n    )\r\n  }\r\n\r\n  uploadFile(event) {\r\n    let reader = new FileReader(); // HTML5 FileReader API\r\n    let file = event.target.files[0];\r\n    if (event.target.files && event.target.files[0]) {\r\n      reader.readAsDataURL(file);\r\n\r\n      // When file uploads set it to file formcontrol\r\n      reader.onload = () => {\r\n        this.uploadImage = true;\r\n        this.imageUrl = reader.result;\r\n        this.projectPropertiesRequest.value = this.imageUrl;\r\n      }\r\n      // ChangeDetectorRef since file is loading outside the zone\r\n      this.cd.markForCheck();        \r\n    }\r\n  }\r\n\r\n  // Function to remove uploaded file\r\n  removeUploadedFile() {\r\n    let newFileList = Array.from(this.el.nativeElement.files);\r\n    this.imageUrl = null;\r\n    this.projectPropertiesRequest.value = '';\r\n    this.uploadImage = false;\r\n  }\r\n\r\n  onTypeSelected() {\r\n    this.projectPropertiesRequest.value = '';\r\n    this.imageUrl = null;\r\n    this.uploadImage = false;\r\n    this.selectedType =this.projectPropertiesRequest.type;\r\n  }\r\n\r\n}\r\n","<h5 class=\"card-title\">Manage Project Properties</h5>\r\n<form [formGroup]=\"projectPropertiesForm\" novalidate>\r\n    <div class=\"modal-body\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6 form-group\">\r\n                <label for=\"name\">Property Name:</label>\r\n                <input type=\"text\" formControlName=\"propertyName\" [(ngModel)]=\"projectPropertiesRequest.propertyName\"\r\n                    class=\"form-control\" id=\"propertyName\" placeholder=\"Property Name\" name=\"propertyName\"\r\n                    [ngClass]=\"{ 'is-invalid': projectPropertiesSubmitted && projectPropertiesFormControl.propertyName.errors }\">\r\n                <div *ngIf=\"projectPropertiesSubmitted && projectPropertiesFormControl.propertyName.errors\"\r\n                    class=\"invalid-feedback\">\r\n                    <div *ngIf=\"projectPropertiesFormControl.propertyName.errors.required\">Property Name is required\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6 form-group\">\r\n                <label for=\"name\">Property Type:</label>\r\n                <select placeholder=\"Select\" [(ngModel)]=\"projectPropertiesRequest.type\" class=\"form-control\"\r\n                    formControlName=\"type\" name=\"type\" (ngModelChange)=\"onTypeSelected()\"\r\n                    [ngClass]=\"{ 'is-invalid': projectPropertiesSubmitted && projectPropertiesFormControl.type.errors }\">\r\n                    <option *ngFor=\"let type of typeList\" [ngValue]=\"type\" class=\"text-uppercase\">{{type}}</option>\r\n                </select>\r\n                <div *ngIf=\"projectPropertiesSubmitted && projectPropertiesFormControl.type.errors\"\r\n                    class=\"invalid-feedback\">\r\n                    <div *ngIf=\"projectPropertiesFormControl.type.errors.required\">Property type is required\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"selectedType==='image'\" class=\"row\">\r\n            <div class=\"col-sm-6 form-group\">\r\n                <div class=\"row custom-wrapper\">\r\n                    <div class=\"col-md-12\">\r\n                        <button type=\"button\" id=\"removeimg\" class=\"btn btn-danger btn-sm\" data-dismiss=\"modal\"\r\n                            (click)=\"removeUploadedFile()\">Remove</button>\r\n                        <button type=\"submit\" class=\"btn btn-primary text-center btn-sm ml-2\"\r\n                            (click)=\"fileInput.click()\">Upload Image</button>\r\n                        <br>\r\n                        <div [ngClass]=\"{ 'is-invalid': projectPropertiesSubmitted && this.projectPropertiesRequest.type === 'image' && !this.uploadImage }\"\r\n                            *ngIf=\"projectPropertiesSubmitted && this.projectPropertiesRequest.type === 'image' && !this.uploadImage\"\r\n                            class=\"invalid-feedback content-display-block\">\r\n                            <div *ngIf=\"this.projectPropertiesRequest.type === 'image' && !this.uploadImage\">Upload\r\n                                image is required\r\n                            </div>\r\n                        </div>\r\n                        <!-- Form starts -->\r\n                        <div class=\"group-gap\">\r\n                            <!-- Upload image -->\r\n                            <div class=\"avatar-upload\">\r\n                                <div class=\"avatar-edit\">\r\n                                    <input class=\"content-display-none\" type='file' id=\"imageUpload\"\r\n                                        accept=\".png, .jpg, .jpeg\" #fileInput (change)=\"uploadFile($event)\" />\r\n                                </div>\r\n                                <br>\r\n                                <div *ngIf=\"uploadImage\" class=\"\">\r\n                                    <img src=\"{{imageUrl}}\" alt=\"Girl in a jacket\" width=\"500\" height=\"333\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"selectedType==='text'\" class=\"row\">\r\n            <div *ngIf=\"!uploadImage\" class=\"col-sm-6 form-group\">\r\n                <label for=\"fullname\">Value:</label>\r\n                <textarea formControlName=\"value\" [(ngModel)]=\"projectPropertiesRequest.value\" class=\"form-control\"\r\n                    id=\"value\" placeholder=\"Full Name\" name=\"value\" rows=\"3\"\r\n                    [ngClass]=\"{ 'is-invalid': projectPropertiesSubmitted && projectPropertiesRequest.value.length === 0 }\"></textarea>\r\n                <div *ngIf=\"projectPropertiesSubmitted && projectPropertiesRequest.value.length === 0\"\r\n                    class=\"invalid-feedback\">\r\n                    <div *ngIf=\"projectPropertiesRequest.value.length === 0\">Value is required\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n    </div>\r\n\r\n    <!-- Modal footer -->\r\n    <div class=\"modal-footer\">\r\n        <button *ngIf=\"!showSpinner\" type=\"submit\" class=\"btn btn-primary text-center\" (click)=\"save()\">Save</button>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mybusiness',\r\n  templateUrl: './mybusiness.component.html',\r\n  styleUrls: ['./mybusiness.component.css']\r\n})\r\nexport class MybusinessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>mybusiness works!</p>\r\n","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-myhomeview',\r\n  templateUrl: './myhomeview.component.html',\r\n  styleUrls: ['./myhomeview.component.css']\r\n})\r\nexport class MyhomeviewComponent implements OnInit {\r\n  \r\n  @HostListener('window:beforeunload') goToPage() {\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>myhomeview works!</p>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AddressService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getStatesListByCountryId(countryId: number): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/address/get/state/' + countryId);\r\n    }\r\n\r\n    getCitiesListByStateId(stateId: number): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/address/get/city/' + stateId);\r\n    }\r\n\r\n    getStatesList(): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/common/states');\r\n    }\r\n\r\n    getCountries(): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/common/countries');\r\n    }\r\n\r\n    getCountriesAndStatesList(): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/common/countries-and-states');\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ContactusRequest } from '../interfaces/ContactusDetails';\r\n\r\n@Injectable()\r\nexport class ContactusService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getProjectProperties(): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/contactus/get-all');\r\n    }\r\n\r\n    saveNotes(projectProperties: ContactusRequest): Observable<any> {\r\n        return this.httpClient.post('http://localhost:7077/contactus/save', projectProperties, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        });\r\n    };\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserSignupDetails } from '../interfaces/UserDetails';\r\nimport { UserInfo } from '../interfaces/User';\r\nimport { ResetPasswordDetails } from '../interfaces/ResetPasswordDetails';\r\nimport { ChangePasswordRequest } from '../interfaces/ChangePasswordDetails';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getUsers(): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/users/all');\r\n    }\r\n\r\n    authenticateUserLogin(userDetails: UserInfo): Observable<any> {\r\n        return this.httpClient.post('http://localhost:7077/app/login/authenticate', userDetails, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        });\r\n    };\r\n\r\n    resetUserLogin(userDetails: ResetPasswordDetails): Observable<any> {\r\n        return this.httpClient.post('http://localhost:7077/app/login/reset-password', userDetails, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        });\r\n    };\r\n\r\n    changePassword(changePasswordRequest: ChangePasswordRequest): Observable<any> {\r\n        return this.httpClient.post('http://localhost:7077/app/login/change-password', changePasswordRequest, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        });\r\n    };\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserSignupDetails, UserDetails } from '../interfaces/UserDetails';\r\nimport { ProjectPropertiesRequest } from '../interfaces/ProjectProperties';\r\n\r\n@Injectable()\r\nexport class ProjectPropertiesService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getProjectProperties(): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/common/getproperties');\r\n    }\r\n\r\n    getCountriesAndStatesList(): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/common/countries-and-states');\r\n    }\r\n\r\n    getStatesList(): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/common/states');\r\n    }\r\n\r\n    getCountries(): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/common/countries');\r\n    }\r\n\r\n    saveProperties(projectProperties: ProjectPropertiesRequest): Observable<any> {\r\n        return this.httpClient.post('http://localhost:7077/project-properties/save', projectProperties, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        });\r\n    };\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserSignupDetails, UserDetails } from '../interfaces/UserDetails';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getUsers(): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/users/all');\r\n    }\r\n\r\n    getAllUsersOnRole(role: number): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/users/get/allusers/role/' + role);\r\n    }\r\n\r\n    getUserById(userId: number): Observable<any> {\r\n        return this.httpClient.get('http://localhost:7077/users/' + userId);\r\n    }\r\n\r\n    saveUser(userDetails: UserSignupDetails): Observable<any> {\r\n        return this.httpClient.post('http://localhost:7077/users/save', userDetails, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        });\r\n    };\r\n\r\n    saveSettings(userDetails: UserDetails): Observable<any> {\r\n        return this.httpClient.post('http://localhost:7077/users/save', userDetails, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        });\r\n    };\r\n}","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { UserSignupDetails } from 'src/app/interfaces/UserDetails';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserNameValidation } from 'src/app/helpers/username-validation';\r\nimport { MustMatchPassword } from 'src/app/helpers/must-match-password';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserRoleType } from '../userroleenum';\r\nimport { UserService } from 'src/app/services/user-service';\r\nimport { UserInfo } from 'src/app/interfaces/User';\r\nimport { IRolesInputData } from 'src/app/interfaces/RolesInterface';\r\n\r\n@Component({\r\n  selector: 'app-registrationform',\r\n  templateUrl: './registrationform.component.html',\r\n  styleUrls: ['./registrationform.component.css']\r\n})\r\nexport class RegistrationformComponent implements OnInit {\r\n  @Input() registerInputData: IRolesInputData;\r\n  @Output() updateUserTable: any = new EventEmitter();\r\n  showSpinner = false;\r\n  roleName: string = '';\r\n\r\n  userSignupDetails: UserSignupDetails = {};\r\n  user: UserInfo = {};\r\n\r\n  registerForm: FormGroup;\r\n  registerUserSubmitted = false;\r\n  acceptTerms = false;\r\n\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private _userService: UserService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.roleName = this.registerInputData.roleName;\r\n    this.signupModalPopUp();\r\n    this.createRegisterForm();\r\n  }\r\n\r\n  get registerFormControl() { return this.registerForm.controls; }\r\n\r\n  createRegisterForm() {\r\n    this.registerForm = this.formBuilder.group({\r\n      fullName: ['', Validators.required],\r\n      userName: ['', [Validators.required, UserNameValidation]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n      phoneNumber: ['', [Validators.required, Validators.minLength(10)]],\r\n      confirmPassword: ['', Validators.required],\r\n      agreeTerms: ['', Validators.required]\r\n    }, {\r\n      validator: MustMatchPassword('password', 'confirmPassword')\r\n    });\r\n  }\r\n\r\n  signupModalPopUp() {\r\n    this.userSignupDetails = {};\r\n    this.registerUserSubmitted = false;\r\n  }\r\n\r\n  registerUser() {\r\n    this.registerUserSubmitted = true;\r\n    this.showSpinner = true;\r\n    if (this.registerForm.invalid) {\r\n      setTimeout(() => this.toastr.warning('You must fill all the Required fields', 'Alert', { timeOut: 3000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n      this.showSpinner = false;\r\n      return;\r\n    }\r\n    if (!this.acceptTerms) {\r\n      this.showSpinner = false;\r\n      setTimeout(() => this.toastr.warning('You must accept Terms & Conditions', 'Alert', { timeOut: 3000, progressBar: true, positionClass: \"toast-bottom-left\" }));\r\n      return;\r\n    }\r\n    this.userSignupDetails.createdBy = this.registerInputData.createdByRole; // change to login role\r\n    this.userSignupDetails.role = this.registerInputData.createRole;\r\n    this.userSignupDetails.roleName = this.registerInputData.roleName;\r\n    this._userService.saveUser(this.userSignupDetails).subscribe(\r\n      data => {\r\n        this.user = data;\r\n        if (this.user.errors === null) {\r\n          this.showSpinner = false;\r\n          setTimeout(() => this.toastr.success('Registration Successful', 'Signup', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n          document.getElementById(\"signup-close\").click();\r\n          this.updateUserTable.emit(this.registerInputData.createRole);\r\n          this.clearData();  \r\n        } else {\r\n          this.showSpinner = false;\r\n          this.toastr.error(this.user.errors[0].errorMessage)\r\n        }\r\n      },\r\n      (error: any) => {\r\n        console.log(error);\r\n        this.showSpinner = false;\r\n        setTimeout(() => this.toastr.error('Registration Failed - unknown error', 'Signup', { timeOut: 4000, progressBar: true, positionClass: \"toast-bottom-left\" }))\r\n      }\r\n    )\r\n  }\r\n\r\n  private clearData() {\r\n    this.user = {};\r\n    this.userSignupDetails = {};\r\n  }\r\n\r\n  close () {}\r\n\r\n\r\n\r\n}\r\n"," <!-- The Modal -->\r\n <div class=\"modal\" id=\"myModal\">\r\n    <div class=\"modal-dialog modal-lg modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n\r\n        <!-- Modal Header -->\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title text-center\">Signup</h4>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        </div>\r\n\r\n        <!-- Modal body -->\r\n        <form [formGroup]=\"registerForm\" novalidate>\r\n\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6 form-group\">\r\n                <label for=\"email\">Full Name(Display Name):</label>\r\n                <input type=\"text\" formControlName=\"fullName\" [(ngModel)]=\"userSignupDetails.fullName\"\r\n                  class=\"form-control\" id=\"fullName\" placeholder=\"Full Name\" name=\"userFullName\"\r\n                  [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.fullName.errors }\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.fullName.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.fullName.errors.required\">Full Name is required</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-sm-6 form-group\">\r\n                <label for=\"email\">User Name:</label>\r\n                <input type=\"text\" formControlName=\"userName\" [(ngModel)]=\"userSignupDetails.userName\"\r\n                  class=\"form-control\" id=\"userName\" placeholder=\"User Name\" name=\"usersignupemail1\"\r\n                  [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.userName.errors }\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.userName.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.userName.errors.required\">User Name is required</div>\r\n                  <div class=\"error-text\" *ngIf=\"registerForm.get('userName').hasError('userNameValidation')\">\r\n                    {{registerForm.get('userName').errors['userNameValidation']}}\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n\r\n            <div class=\"row\"><div class=\"col-sm-6\">\r\n              <label for=\"email\">Email:</label>\r\n              <input type=\"text\" formControlName=\"email\" [(ngModel)]=\"userSignupDetails.email\" class=\"form-control\"\r\n                id=\"email\" maxlength=\"80\" placeholder=\"Email Address\" name=\"usersignupemail\"\r\n                [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.email.errors }\">\r\n              <div *ngIf=\"registerUserSubmitted && registerFormControl.email.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"registerFormControl.email.errors.required\">Email is required</div>\r\n              </div>\r\n            </div>\r\n              \r\n              <div class=\"col-sm-6\">\r\n                <label for=\"phoneNumber\">Phone Number:</label>\r\n                <input type=\"number\" formControlName=\"phoneNumber\" [(ngModel)]=\"userSignupDetails.phoneNumber\"\r\n                  class=\"form-control\" placeholder=\"Phone Number\" name=\"usersignupphonenumber\"\r\n                  [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.phoneNumber.errors }\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.phoneNumber.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.phoneNumber.errors.required\">Phone Number is required</div>\r\n                  <div *ngIf=\"registerFormControl.phoneNumber.errors.minLenght\">Phone Number must be at least 10 digits\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <br>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <label for=\"email\">Password:</label>\r\n                <input type=\"password\" formControlName=\"password\" [(ngModel)]=\"userSignupDetails.password\"\r\n                  class=\"form-control\" placeholder=\"Enter password\" name=\"usersignuppswd\"\r\n                  [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.password.errors }\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.password.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.password.errors.required\">Password is required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <label for=\"ConfirmPassword\">Confirm Password:</label>\r\n                <input type=\"password\" formControlName=\"confirmPassword\" [(ngModel)]=\"userSignupDetails.confirmPassword\"\r\n                  class=\"form-control\" placeholder=\"Confirm password\" name=\"usersignupcnfpswd\"\r\n                  [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.confirmPassword.errors }\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.confirmPassword.errors\"\r\n                  class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.confirmPassword.errors.required\">Confirm password is required</div>\r\n                  <div *ngIf=\"registerFormControl.confirmPassword.errors.mustMatchPassword\">Passwords must match</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <!-- Modal footer -->\r\n          <div class=\"modal-footer\">\r\n            <div class=\"col-sm-5 text-right\">\r\n              <div class=\"form-check\">\r\n                <div *ngIf=\"registerUserSubmitted && registerFormControl.agreeTerms.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"registerFormControl.agreeTerms.errors.required\">Email is required</div>\r\n                </div>\r\n                <label class=\"form-check-label\">\r\n                  <input formControlName=\"agreeTerms\" class=\"form-control\" type=\"checkbox\" class=\"form-check-input\"\r\n                    [(ngModel)]=\"acceptTerms\"\r\n                    [ngClass]=\"{ 'is-invalid': registerUserSubmitted && registerFormControl.agreeTerms.errors }\">I\r\n                  accept the Terms & Conditions\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <button type=\"button\" id=\"signup-close\" class=\"btn btn-danger\" data-dismiss=\"modal\"\r\n              (click)=\"close()\">Close</button>\r\n\r\n            <button *ngIf=\"showSpinner\" class=\"btn btn-primary text-center\" type=\"button\" [disabled]=\"showSpinner\">\r\n              <span class=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n              Signup\r\n            </button>\r\n            <button *ngIf=\"!showSpinner\" type=\"submit\" class=\"btn btn-primary text-center\"\r\n              (click)=\"registerUser()\">Signup</button>\r\n\r\n          </div>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>","import { Injectable } from '@angular/core';\r\nimport { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { UserDetails } from 'src/app/interfaces/User';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoginUtilityService {\r\n    private userLoginData = new BehaviorSubject<any>('');\r\n\r\n    getUserLoginData$(): Observable<UserDetails> {\r\n        return this.userLoginData.asObservable();\r\n    }\r\n    setUserLoginData(userDetails: UserDetails): void {\r\n        this.userLoginData.next(userDetails);\r\n    }\r\n    clearUserLoginData() {\r\n        this.userLoginData = new BehaviorSubject<any>('');\r\n    }\r\n}","export enum UserRoleType {\r\n    SUPERADMIN = 1,\r\n    ADMIN = 2,\r\n    MANAGER = 3,\r\n    USER = 4.\r\n}\r\n\r\nexport enum UserRoleTypeName {\r\n    SUPERADMIN = 'Super Admin',\r\n    ADMIN = 'Admin',\r\n    MANAGER = 'Manager',\r\n    USER = 'User'\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\r\n  // Ensure Angular destroys itself on hot reloads.\r\n  if (window['ngRef']) {\r\n    window['ngRef'].destroy();\r\n  }\r\n  window['ngRef'] = ref;\r\n\r\n  // Otherwise, log the boot error\r\n}).catch(err => console.error(err));\r\n"]}